// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "TopAdder_addoperator_float.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic TopAdder_addoperator_float::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic TopAdder_addoperator_float::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> TopAdder_addoperator_float::ap_ST_pp0_stg0_fsm_0 = "1";
const sc_lv<32> TopAdder_addoperator_float::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> TopAdder_addoperator_float::ap_const_lv1_1 = "1";
const sc_lv<2> TopAdder_addoperator_float::ap_const_lv2_0 = "00";

TopAdder_addoperator_float::TopAdder_addoperator_float(sc_module_name name) : sc_module(name), mVcdFile(0) {
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0 = new TopAdder_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0");
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0->clk(ap_clk);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0->reset(ap_rst);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0->din0(p_x_M_real_load_reg_262);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0->din1(p_y_M_real_load_reg_272);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0->ce(grp_fu_138_ce);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0->dout(grp_fu_138_p2);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1 = new TopAdder_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1");
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1->clk(ap_clk);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1->reset(ap_rst);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1->din0(p_x_M_imag_load_reg_267);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1->din1(p_y_M_imag_load_reg_277);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1->ce(grp_fu_142_ce);
    TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1->dout(grp_fu_142_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_ce );
    sensitive << ( grp_fu_138_p2 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it6 );
    sensitive << ( ap_ce );
    sensitive << ( grp_fu_142_p2 );

    SC_METHOD(thread_ap_sig_bdd_19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_0);
    sensitive << ( ap_sig_bdd_19 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_ap_sig_pprststart_0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppiten_pp0_it5 );

    SC_METHOD(thread_grp_fu_138_ce);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_grp_fu_142_ce);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_p_shl1_cast_fu_172_p1);
    sensitive << ( tmp_1_fu_164_p3 );

    SC_METHOD(thread_p_shl_cast_fu_209_p1);
    sensitive << ( tmp_5_fu_201_p3 );

    SC_METHOD(thread_p_x_M_imag_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_4_cast_fu_188_p1 );

    SC_METHOD(thread_p_x_M_imag_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_p_x_M_real_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_7_cast_fu_225_p1 );

    SC_METHOD(thread_p_x_M_real_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_p_y_M_imag_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp4_cast_fu_146_p1 );

    SC_METHOD(thread_p_y_M_imag_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_p_y_M_real_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp3_cast_fu_151_p1 );

    SC_METHOD(thread_p_y_M_real_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_tmp1_cast_cast_fu_160_p1);
    sensitive << ( tmp1 );

    SC_METHOD(thread_tmp3_cast_fu_151_p1);
    sensitive << ( tmp3 );

    SC_METHOD(thread_tmp4_cast_fu_146_p1);
    sensitive << ( tmp4 );

    SC_METHOD(thread_tmp_1_fu_164_p3);
    sensitive << ( tmp1 );

    SC_METHOD(thread_tmp_2_fu_176_p2);
    sensitive << ( tmp1_cast_cast_fu_160_p1 );
    sensitive << ( p_shl1_cast_fu_172_p1 );

    SC_METHOD(thread_tmp_32_cast_cast_fu_156_p1);
    sensitive << ( tmp_32 );

    SC_METHOD(thread_tmp_3_cast_cast_fu_193_p1);
    sensitive << ( tmp_3 );

    SC_METHOD(thread_tmp_4_cast_fu_188_p1);
    sensitive << ( tmp_4_fu_182_p2 );

    SC_METHOD(thread_tmp_4_fu_182_p2);
    sensitive << ( tmp_2_fu_176_p2 );
    sensitive << ( tmp_32_cast_cast_fu_156_p1 );

    SC_METHOD(thread_tmp_5_fu_201_p3);
    sensitive << ( tmp );

    SC_METHOD(thread_tmp_6_fu_213_p2);
    sensitive << ( tmp_cast_cast_fu_197_p1 );
    sensitive << ( p_shl_cast_fu_209_p1 );

    SC_METHOD(thread_tmp_7_cast_fu_225_p1);
    sensitive << ( tmp_7_fu_219_p2 );

    SC_METHOD(thread_tmp_7_fu_219_p2);
    sensitive << ( tmp_6_fu_213_p2 );
    sensitive << ( tmp_3_cast_cast_fu_193_p1 );

    SC_METHOD(thread_tmp_cast_cast_fu_197_p1);
    sensitive << ( tmp );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_ce );
    sensitive << ( ap_sig_pprstidle_pp0 );
    sensitive << ( ap_sig_pprststart_0 );

    ap_CS_fsm = "1";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "TopAdder_addoperator_float_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, p_x_M_real_address0, "(port)p_x_M_real_address0");
    sc_trace(mVcdFile, p_x_M_real_ce0, "(port)p_x_M_real_ce0");
    sc_trace(mVcdFile, p_x_M_real_q0, "(port)p_x_M_real_q0");
    sc_trace(mVcdFile, tmp, "(port)tmp");
    sc_trace(mVcdFile, tmp_3, "(port)tmp_3");
    sc_trace(mVcdFile, p_x_M_imag_address0, "(port)p_x_M_imag_address0");
    sc_trace(mVcdFile, p_x_M_imag_ce0, "(port)p_x_M_imag_ce0");
    sc_trace(mVcdFile, p_x_M_imag_q0, "(port)p_x_M_imag_q0");
    sc_trace(mVcdFile, tmp1, "(port)tmp1");
    sc_trace(mVcdFile, tmp_32, "(port)tmp_32");
    sc_trace(mVcdFile, p_y_M_real_address0, "(port)p_y_M_real_address0");
    sc_trace(mVcdFile, p_y_M_real_ce0, "(port)p_y_M_real_ce0");
    sc_trace(mVcdFile, p_y_M_real_q0, "(port)p_y_M_real_q0");
    sc_trace(mVcdFile, tmp3, "(port)tmp3");
    sc_trace(mVcdFile, p_y_M_imag_address0, "(port)p_y_M_imag_address0");
    sc_trace(mVcdFile, p_y_M_imag_ce0, "(port)p_y_M_imag_ce0");
    sc_trace(mVcdFile, p_y_M_imag_q0, "(port)p_y_M_imag_q0");
    sc_trace(mVcdFile, tmp4, "(port)tmp4");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_0, "ap_sig_cseq_ST_pp0_stg0_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_19, "ap_sig_bdd_19");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it5, "ap_reg_ppiten_pp0_it5");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it6, "ap_reg_ppiten_pp0_it6");
    sc_trace(mVcdFile, p_x_M_real_load_reg_262, "p_x_M_real_load_reg_262");
    sc_trace(mVcdFile, p_x_M_imag_load_reg_267, "p_x_M_imag_load_reg_267");
    sc_trace(mVcdFile, p_y_M_real_load_reg_272, "p_y_M_real_load_reg_272");
    sc_trace(mVcdFile, p_y_M_imag_load_reg_277, "p_y_M_imag_load_reg_277");
    sc_trace(mVcdFile, tmp_4_cast_fu_188_p1, "tmp_4_cast_fu_188_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_225_p1, "tmp_7_cast_fu_225_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_146_p1, "tmp4_cast_fu_146_p1");
    sc_trace(mVcdFile, tmp3_cast_fu_151_p1, "tmp3_cast_fu_151_p1");
    sc_trace(mVcdFile, tmp_1_fu_164_p3, "tmp_1_fu_164_p3");
    sc_trace(mVcdFile, tmp1_cast_cast_fu_160_p1, "tmp1_cast_cast_fu_160_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_172_p1, "p_shl1_cast_fu_172_p1");
    sc_trace(mVcdFile, tmp_2_fu_176_p2, "tmp_2_fu_176_p2");
    sc_trace(mVcdFile, tmp_32_cast_cast_fu_156_p1, "tmp_32_cast_cast_fu_156_p1");
    sc_trace(mVcdFile, tmp_4_fu_182_p2, "tmp_4_fu_182_p2");
    sc_trace(mVcdFile, tmp_5_fu_201_p3, "tmp_5_fu_201_p3");
    sc_trace(mVcdFile, tmp_cast_cast_fu_197_p1, "tmp_cast_cast_fu_197_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_209_p1, "p_shl_cast_fu_209_p1");
    sc_trace(mVcdFile, tmp_6_fu_213_p2, "tmp_6_fu_213_p2");
    sc_trace(mVcdFile, tmp_3_cast_cast_fu_193_p1, "tmp_3_cast_cast_fu_193_p1");
    sc_trace(mVcdFile, tmp_7_fu_219_p2, "tmp_7_fu_219_p2");
    sc_trace(mVcdFile, grp_fu_138_p2, "grp_fu_138_p2");
    sc_trace(mVcdFile, grp_fu_142_p2, "grp_fu_142_p2");
    sc_trace(mVcdFile, grp_fu_138_ce, "grp_fu_138_ce");
    sc_trace(mVcdFile, grp_fu_142_ce, "grp_fu_142_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
    sc_trace(mVcdFile, ap_sig_pprststart_0, "ap_sig_pprststart_0");
#endif

    }
}

TopAdder_addoperator_float::~TopAdder_addoperator_float() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0;
    delete TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1;
}

void TopAdder_addoperator_float::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_pp0_stg0_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
            ap_reg_ppiten_pp0_it5 = ap_reg_ppiten_pp0_it4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
            ap_reg_ppiten_pp0_it6 = ap_reg_ppiten_pp0_it5.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        p_x_M_imag_load_reg_267 = p_x_M_imag_q0.read();
        p_x_M_real_load_reg_262 = p_x_M_real_q0.read();
        p_y_M_imag_load_reg_277 = p_y_M_imag_q0.read();
        p_y_M_real_load_reg_272 = p_y_M_real_q0.read();
    }
}

void TopAdder_addoperator_float::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it6.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_ap_reg_ppiten_pp0_it0() {
    ap_reg_ppiten_pp0_it0 = ap_start.read();
}

void TopAdder_addoperator_float::thread_ap_return_0() {
    ap_return_0 = grp_fu_138_p2.read();
}

void TopAdder_addoperator_float::thread_ap_return_1() {
    ap_return_1 = grp_fu_142_p2.read();
}

void TopAdder_addoperator_float::thread_ap_sig_bdd_19() {
    ap_sig_bdd_19 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void TopAdder_addoperator_float::thread_ap_sig_cseq_ST_pp0_stg0_fsm_0() {
    if (ap_sig_bdd_19.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_ap_sig_pprststart_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it5.read()))) {
        ap_sig_pprststart_0 = ap_const_logic_1;
    } else {
        ap_sig_pprststart_0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_grp_fu_138_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        grp_fu_138_ce = ap_const_logic_1;
    } else {
        grp_fu_138_ce = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_grp_fu_142_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        grp_fu_142_ce = ap_const_logic_1;
    } else {
        grp_fu_142_ce = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_p_shl1_cast_fu_172_p1() {
    p_shl1_cast_fu_172_p1 = esl_zext<5,4>(tmp_1_fu_164_p3.read());
}

void TopAdder_addoperator_float::thread_p_shl_cast_fu_209_p1() {
    p_shl_cast_fu_209_p1 = esl_zext<5,4>(tmp_5_fu_201_p3.read());
}

void TopAdder_addoperator_float::thread_p_x_M_imag_address0() {
    p_x_M_imag_address0 =  (sc_lv<4>) (tmp_4_cast_fu_188_p1.read());
}

void TopAdder_addoperator_float::thread_p_x_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        p_x_M_imag_ce0 = ap_const_logic_1;
    } else {
        p_x_M_imag_ce0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_p_x_M_real_address0() {
    p_x_M_real_address0 =  (sc_lv<4>) (tmp_7_cast_fu_225_p1.read());
}

void TopAdder_addoperator_float::thread_p_x_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        p_x_M_real_ce0 = ap_const_logic_1;
    } else {
        p_x_M_real_ce0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_p_y_M_imag_address0() {
    p_y_M_imag_address0 =  (sc_lv<2>) (tmp4_cast_fu_146_p1.read());
}

void TopAdder_addoperator_float::thread_p_y_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        p_y_M_imag_ce0 = ap_const_logic_1;
    } else {
        p_y_M_imag_ce0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_p_y_M_real_address0() {
    p_y_M_real_address0 =  (sc_lv<2>) (tmp3_cast_fu_151_p1.read());
}

void TopAdder_addoperator_float::thread_p_y_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        p_y_M_real_ce0 = ap_const_logic_1;
    } else {
        p_y_M_real_ce0 = ap_const_logic_0;
    }
}

void TopAdder_addoperator_float::thread_tmp1_cast_cast_fu_160_p1() {
    tmp1_cast_cast_fu_160_p1 = esl_zext<5,2>(tmp1.read());
}

void TopAdder_addoperator_float::thread_tmp3_cast_fu_151_p1() {
    tmp3_cast_fu_151_p1 = esl_zext<64,2>(tmp3.read());
}

void TopAdder_addoperator_float::thread_tmp4_cast_fu_146_p1() {
    tmp4_cast_fu_146_p1 = esl_zext<64,2>(tmp4.read());
}

void TopAdder_addoperator_float::thread_tmp_1_fu_164_p3() {
    tmp_1_fu_164_p3 = esl_concat<2,2>(tmp1.read(), ap_const_lv2_0);
}

void TopAdder_addoperator_float::thread_tmp_2_fu_176_p2() {
    tmp_2_fu_176_p2 = (!tmp1_cast_cast_fu_160_p1.read().is_01() || !p_shl1_cast_fu_172_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp1_cast_cast_fu_160_p1.read()) + sc_biguint<5>(p_shl1_cast_fu_172_p1.read()));
}

void TopAdder_addoperator_float::thread_tmp_32_cast_cast_fu_156_p1() {
    tmp_32_cast_cast_fu_156_p1 = esl_zext<5,4>(tmp_32.read());
}

void TopAdder_addoperator_float::thread_tmp_3_cast_cast_fu_193_p1() {
    tmp_3_cast_cast_fu_193_p1 = esl_zext<5,4>(tmp_3.read());
}

void TopAdder_addoperator_float::thread_tmp_4_cast_fu_188_p1() {
    tmp_4_cast_fu_188_p1 = esl_zext<64,5>(tmp_4_fu_182_p2.read());
}

void TopAdder_addoperator_float::thread_tmp_4_fu_182_p2() {
    tmp_4_fu_182_p2 = (!tmp_2_fu_176_p2.read().is_01() || !tmp_32_cast_cast_fu_156_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_fu_176_p2.read()) + sc_biguint<5>(tmp_32_cast_cast_fu_156_p1.read()));
}

void TopAdder_addoperator_float::thread_tmp_5_fu_201_p3() {
    tmp_5_fu_201_p3 = esl_concat<2,2>(tmp.read(), ap_const_lv2_0);
}

void TopAdder_addoperator_float::thread_tmp_6_fu_213_p2() {
    tmp_6_fu_213_p2 = (!tmp_cast_cast_fu_197_p1.read().is_01() || !p_shl_cast_fu_209_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_cast_cast_fu_197_p1.read()) + sc_biguint<5>(p_shl_cast_fu_209_p1.read()));
}

void TopAdder_addoperator_float::thread_tmp_7_cast_fu_225_p1() {
    tmp_7_cast_fu_225_p1 = esl_zext<64,5>(tmp_7_fu_219_p2.read());
}

void TopAdder_addoperator_float::thread_tmp_7_fu_219_p2() {
    tmp_7_fu_219_p2 = (!tmp_6_fu_213_p2.read().is_01() || !tmp_3_cast_cast_fu_193_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_6_fu_213_p2.read()) + sc_biguint<5>(tmp_3_cast_cast_fu_193_p1.read()));
}

void TopAdder_addoperator_float::thread_tmp_cast_cast_fu_197_p1() {
    tmp_cast_cast_fu_197_p1 = esl_zext<5,2>(tmp.read());
}

void TopAdder_addoperator_float::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

