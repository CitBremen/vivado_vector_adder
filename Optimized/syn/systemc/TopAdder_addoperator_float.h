// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _TopAdder_addoperator_float_HH_
#define _TopAdder_addoperator_float_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "TopAdder_fadd_32ns_32ns_32_5_full_dsp.h"

namespace ap_rtl {

struct TopAdder_addoperator_float : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_out< sc_lv<4> > p_x_M_real_address0;
    sc_out< sc_logic > p_x_M_real_ce0;
    sc_in< sc_lv<32> > p_x_M_real_q0;
    sc_in< sc_lv<2> > tmp;
    sc_in< sc_lv<4> > tmp_3;
    sc_out< sc_lv<4> > p_x_M_imag_address0;
    sc_out< sc_logic > p_x_M_imag_ce0;
    sc_in< sc_lv<32> > p_x_M_imag_q0;
    sc_in< sc_lv<2> > tmp1;
    sc_in< sc_lv<4> > tmp_32;
    sc_out< sc_lv<2> > p_y_M_real_address0;
    sc_out< sc_logic > p_y_M_real_ce0;
    sc_in< sc_lv<32> > p_y_M_real_q0;
    sc_in< sc_lv<2> > tmp3;
    sc_out< sc_lv<2> > p_y_M_imag_address0;
    sc_out< sc_logic > p_y_M_imag_ce0;
    sc_in< sc_lv<32> > p_y_M_imag_q0;
    sc_in< sc_lv<2> > tmp4;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;


    // Module declarations
    TopAdder_addoperator_float(sc_module_name name);
    SC_HAS_PROCESS(TopAdder_addoperator_float);

    ~TopAdder_addoperator_float();

    sc_trace_file* mVcdFile;

    TopAdder_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* TopAdder_fadd_32ns_32ns_32_5_full_dsp_U0;
    TopAdder_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* TopAdder_fadd_32ns_32ns_32_5_full_dsp_U1;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_0;
    sc_signal< bool > ap_sig_bdd_19;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_lv<32> > p_x_M_real_load_reg_262;
    sc_signal< sc_lv<32> > p_x_M_imag_load_reg_267;
    sc_signal< sc_lv<32> > p_y_M_real_load_reg_272;
    sc_signal< sc_lv<32> > p_y_M_imag_load_reg_277;
    sc_signal< sc_lv<64> > tmp_4_cast_fu_188_p1;
    sc_signal< sc_lv<64> > tmp_7_cast_fu_225_p1;
    sc_signal< sc_lv<64> > tmp4_cast_fu_146_p1;
    sc_signal< sc_lv<64> > tmp3_cast_fu_151_p1;
    sc_signal< sc_lv<4> > tmp_1_fu_164_p3;
    sc_signal< sc_lv<5> > tmp1_cast_cast_fu_160_p1;
    sc_signal< sc_lv<5> > p_shl1_cast_fu_172_p1;
    sc_signal< sc_lv<5> > tmp_2_fu_176_p2;
    sc_signal< sc_lv<5> > tmp_32_cast_cast_fu_156_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_182_p2;
    sc_signal< sc_lv<4> > tmp_5_fu_201_p3;
    sc_signal< sc_lv<5> > tmp_cast_cast_fu_197_p1;
    sc_signal< sc_lv<5> > p_shl_cast_fu_209_p1;
    sc_signal< sc_lv<5> > tmp_6_fu_213_p2;
    sc_signal< sc_lv<5> > tmp_3_cast_cast_fu_193_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_219_p2;
    sc_signal< sc_lv<32> > grp_fu_138_p2;
    sc_signal< sc_lv<32> > grp_fu_142_p2;
    sc_signal< sc_logic > grp_fu_138_ce;
    sc_signal< sc_logic > grp_fu_142_ce;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_sig_pprstidle_pp0;
    sc_signal< sc_logic > ap_sig_pprststart_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_pp0_stg0_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_ppiten_pp0_it0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_sig_bdd_19();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_0();
    void thread_ap_sig_pprstidle_pp0();
    void thread_ap_sig_pprststart_0();
    void thread_grp_fu_138_ce();
    void thread_grp_fu_142_ce();
    void thread_p_shl1_cast_fu_172_p1();
    void thread_p_shl_cast_fu_209_p1();
    void thread_p_x_M_imag_address0();
    void thread_p_x_M_imag_ce0();
    void thread_p_x_M_real_address0();
    void thread_p_x_M_real_ce0();
    void thread_p_y_M_imag_address0();
    void thread_p_y_M_imag_ce0();
    void thread_p_y_M_real_address0();
    void thread_p_y_M_real_ce0();
    void thread_tmp1_cast_cast_fu_160_p1();
    void thread_tmp3_cast_fu_151_p1();
    void thread_tmp4_cast_fu_146_p1();
    void thread_tmp_1_fu_164_p3();
    void thread_tmp_2_fu_176_p2();
    void thread_tmp_32_cast_cast_fu_156_p1();
    void thread_tmp_3_cast_cast_fu_193_p1();
    void thread_tmp_4_cast_fu_188_p1();
    void thread_tmp_4_fu_182_p2();
    void thread_tmp_5_fu_201_p3();
    void thread_tmp_6_fu_213_p2();
    void thread_tmp_7_cast_fu_225_p1();
    void thread_tmp_7_fu_219_p2();
    void thread_tmp_cast_cast_fu_197_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
