// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "TopAdder.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic TopAdder::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic TopAdder::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> TopAdder::ap_ST_st1_fsm_0 = "1";
const sc_lv<37> TopAdder::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<37> TopAdder::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<37> TopAdder::ap_ST_pp0_stg2_fsm_3 = "1000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg3_fsm_4 = "10000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg4_fsm_5 = "100000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg5_fsm_6 = "1000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg6_fsm_7 = "10000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg7_fsm_8 = "100000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg8_fsm_9 = "1000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg9_fsm_10 = "10000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg10_fsm_11 = "100000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg11_fsm_12 = "1000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg12_fsm_13 = "10000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg13_fsm_14 = "100000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg14_fsm_15 = "1000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg15_fsm_16 = "10000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg16_fsm_17 = "100000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg17_fsm_18 = "1000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg18_fsm_19 = "10000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg19_fsm_20 = "100000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg20_fsm_21 = "1000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg21_fsm_22 = "10000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg22_fsm_23 = "100000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg23_fsm_24 = "1000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg24_fsm_25 = "10000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg25_fsm_26 = "100000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg26_fsm_27 = "1000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg27_fsm_28 = "10000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg28_fsm_29 = "100000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg29_fsm_30 = "1000000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg30_fsm_31 = "10000000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg31_fsm_32 = "100000000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg32_fsm_33 = "1000000000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg33_fsm_34 = "10000000000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_pp0_stg34_fsm_35 = "100000000000000000000000000000000000";
const sc_lv<37> TopAdder::ap_ST_st39_fsm_36 = "1000000000000000000000000000000000000";
const sc_lv<32> TopAdder::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> TopAdder::ap_const_lv1_1 = "1";
const int TopAdder::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> TopAdder::ap_const_lv32_8 = "1000";
const sc_lv<1> TopAdder::ap_const_lv1_0 = "0";
const sc_lv<32> TopAdder::ap_const_lv32_F = "1111";
const sc_lv<32> TopAdder::ap_const_lv32_16 = "10110";
const sc_lv<32> TopAdder::ap_const_lv32_1D = "11101";
const sc_lv<32> TopAdder::ap_const_lv32_1 = "1";
const sc_lv<32> TopAdder::ap_const_lv32_9 = "1001";
const sc_lv<32> TopAdder::ap_const_lv32_23 = "100011";
const sc_lv<2> TopAdder::ap_const_lv2_0 = "00";
const sc_lv<32> TopAdder::ap_const_lv32_2 = "10";
const sc_lv<32> TopAdder::ap_const_lv32_3 = "11";
const sc_lv<32> TopAdder::ap_const_lv32_4 = "100";
const sc_lv<32> TopAdder::ap_const_lv32_5 = "101";
const sc_lv<32> TopAdder::ap_const_lv32_6 = "110";
const sc_lv<32> TopAdder::ap_const_lv32_7 = "111";
const sc_lv<32> TopAdder::ap_const_lv32_A = "1010";
const sc_lv<32> TopAdder::ap_const_lv32_B = "1011";
const sc_lv<32> TopAdder::ap_const_lv32_C = "1100";
const sc_lv<32> TopAdder::ap_const_lv32_D = "1101";
const sc_lv<32> TopAdder::ap_const_lv32_E = "1110";
const sc_lv<32> TopAdder::ap_const_lv32_10 = "10000";
const sc_lv<32> TopAdder::ap_const_lv32_11 = "10001";
const sc_lv<32> TopAdder::ap_const_lv32_12 = "10010";
const sc_lv<32> TopAdder::ap_const_lv32_13 = "10011";
const sc_lv<32> TopAdder::ap_const_lv32_14 = "10100";
const sc_lv<32> TopAdder::ap_const_lv32_15 = "10101";
const sc_lv<32> TopAdder::ap_const_lv32_17 = "10111";
const sc_lv<32> TopAdder::ap_const_lv32_18 = "11000";
const sc_lv<32> TopAdder::ap_const_lv32_19 = "11001";
const sc_lv<32> TopAdder::ap_const_lv32_1A = "11010";
const sc_lv<32> TopAdder::ap_const_lv32_1B = "11011";
const sc_lv<32> TopAdder::ap_const_lv32_1C = "11100";
const sc_lv<32> TopAdder::ap_const_lv32_1E = "11110";
const sc_lv<32> TopAdder::ap_const_lv32_1F = "11111";
const sc_lv<32> TopAdder::ap_const_lv32_20 = "100000";
const sc_lv<32> TopAdder::ap_const_lv32_21 = "100001";
const sc_lv<32> TopAdder::ap_const_lv32_22 = "100010";
const sc_lv<4> TopAdder::ap_const_lv4_0 = "0000";
const sc_lv<4> TopAdder::ap_const_lv4_1 = "1";
const sc_lv<4> TopAdder::ap_const_lv4_2 = "10";
const sc_lv<4> TopAdder::ap_const_lv4_3 = "11";
const sc_lv<4> TopAdder::ap_const_lv4_4 = "100";
const sc_lv<2> TopAdder::ap_const_lv2_3 = "11";
const sc_lv<2> TopAdder::ap_const_lv2_1 = "1";
const sc_lv<32> TopAdder::ap_const_lv32_24 = "100100";

TopAdder::TopAdder(sc_module_name name) : sc_module(name), mVcdFile(0) {
    TopAdder_AXILiteS_s_axi_U = new TopAdder_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("TopAdder_AXILiteS_s_axi_U");
    TopAdder_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    TopAdder_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    TopAdder_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    TopAdder_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    TopAdder_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    TopAdder_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    TopAdder_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    TopAdder_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    TopAdder_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    TopAdder_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    TopAdder_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    TopAdder_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    TopAdder_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    TopAdder_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    TopAdder_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    TopAdder_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    TopAdder_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    TopAdder_AXILiteS_s_axi_U->ACLK(ap_clk);
    TopAdder_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    TopAdder_AXILiteS_s_axi_U->ACLK_EN(TopAdder_AXILiteS_s_axi_U_ap_dummy_ce);
    TopAdder_AXILiteS_s_axi_U->ap_start(ap_start);
    TopAdder_AXILiteS_s_axi_U->interrupt(interrupt);
    TopAdder_AXILiteS_s_axi_U->ap_ready(ap_ready);
    TopAdder_AXILiteS_s_axi_U->ap_done(ap_done);
    TopAdder_AXILiteS_s_axi_U->ap_idle(ap_idle);
    TopAdder_AXILiteS_s_axi_U->ap_return(ap_return);
    TopAdder_AXILiteS_s_axi_U->output_M_real_address0(output_M_real_address0);
    TopAdder_AXILiteS_s_axi_U->output_M_real_ce0(output_M_real_ce0);
    TopAdder_AXILiteS_s_axi_U->output_M_real_we0(output_M_real_we0);
    TopAdder_AXILiteS_s_axi_U->output_M_real_d0(output_M_real_d0);
    TopAdder_AXILiteS_s_axi_U->output_M_imag_address0(output_M_imag_address0);
    TopAdder_AXILiteS_s_axi_U->output_M_imag_ce0(output_M_imag_ce0);
    TopAdder_AXILiteS_s_axi_U->output_M_imag_we0(output_M_imag_we0);
    TopAdder_AXILiteS_s_axi_U->output_M_imag_d0(output_M_imag_d0);
    TopAdder_AXILiteS_s_axi_U->input1_M_real_address0(input1_M_real_address0);
    TopAdder_AXILiteS_s_axi_U->input1_M_real_ce0(input1_M_real_ce0);
    TopAdder_AXILiteS_s_axi_U->input1_M_real_q0(input1_M_real_q0);
    TopAdder_AXILiteS_s_axi_U->input1_M_imag_address0(input1_M_imag_address0);
    TopAdder_AXILiteS_s_axi_U->input1_M_imag_ce0(input1_M_imag_ce0);
    TopAdder_AXILiteS_s_axi_U->input1_M_imag_q0(input1_M_imag_q0);
    TopAdder_AXILiteS_s_axi_U->input2_M_real_address0(input2_M_real_address0);
    TopAdder_AXILiteS_s_axi_U->input2_M_real_ce0(input2_M_real_ce0);
    TopAdder_AXILiteS_s_axi_U->input2_M_real_q0(input2_M_real_q0);
    TopAdder_AXILiteS_s_axi_U->input2_M_imag_address0(input2_M_imag_address0);
    TopAdder_AXILiteS_s_axi_U->input2_M_imag_ce0(input2_M_imag_ce0);
    TopAdder_AXILiteS_s_axi_U->input2_M_imag_q0(input2_M_imag_q0);
    grp_TopAdder_addoperator_float_fu_118 = new TopAdder_addoperator_float("grp_TopAdder_addoperator_float_fu_118");
    grp_TopAdder_addoperator_float_fu_118->ap_clk(ap_clk);
    grp_TopAdder_addoperator_float_fu_118->ap_rst(ap_rst_n_inv);
    grp_TopAdder_addoperator_float_fu_118->ap_start(grp_TopAdder_addoperator_float_fu_118_ap_start);
    grp_TopAdder_addoperator_float_fu_118->ap_done(grp_TopAdder_addoperator_float_fu_118_ap_done);
    grp_TopAdder_addoperator_float_fu_118->ap_idle(grp_TopAdder_addoperator_float_fu_118_ap_idle);
    grp_TopAdder_addoperator_float_fu_118->ap_ready(grp_TopAdder_addoperator_float_fu_118_ap_ready);
    grp_TopAdder_addoperator_float_fu_118->ap_ce(grp_TopAdder_addoperator_float_fu_118_ap_ce);
    grp_TopAdder_addoperator_float_fu_118->p_x_M_real_address0(grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0);
    grp_TopAdder_addoperator_float_fu_118->p_x_M_real_ce0(grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0);
    grp_TopAdder_addoperator_float_fu_118->p_x_M_real_q0(grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0);
    grp_TopAdder_addoperator_float_fu_118->tmp(grp_TopAdder_addoperator_float_fu_118_tmp);
    grp_TopAdder_addoperator_float_fu_118->tmp_3(grp_TopAdder_addoperator_float_fu_118_tmp_3);
    grp_TopAdder_addoperator_float_fu_118->p_x_M_imag_address0(grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0);
    grp_TopAdder_addoperator_float_fu_118->p_x_M_imag_ce0(grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0);
    grp_TopAdder_addoperator_float_fu_118->p_x_M_imag_q0(grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0);
    grp_TopAdder_addoperator_float_fu_118->tmp1(grp_TopAdder_addoperator_float_fu_118_tmp1);
    grp_TopAdder_addoperator_float_fu_118->tmp_32(grp_TopAdder_addoperator_float_fu_118_tmp_32);
    grp_TopAdder_addoperator_float_fu_118->p_y_M_real_address0(grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0);
    grp_TopAdder_addoperator_float_fu_118->p_y_M_real_ce0(grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0);
    grp_TopAdder_addoperator_float_fu_118->p_y_M_real_q0(grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0);
    grp_TopAdder_addoperator_float_fu_118->tmp3(grp_TopAdder_addoperator_float_fu_118_tmp3);
    grp_TopAdder_addoperator_float_fu_118->p_y_M_imag_address0(grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0);
    grp_TopAdder_addoperator_float_fu_118->p_y_M_imag_ce0(grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0);
    grp_TopAdder_addoperator_float_fu_118->p_y_M_imag_q0(grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0);
    grp_TopAdder_addoperator_float_fu_118->tmp4(grp_TopAdder_addoperator_float_fu_118_tmp4);
    grp_TopAdder_addoperator_float_fu_118->ap_return_0(grp_TopAdder_addoperator_float_fu_118_ap_return_0);
    grp_TopAdder_addoperator_float_fu_118->ap_return_1(grp_TopAdder_addoperator_float_fu_118_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_TopAdder_AXILiteS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st39_fsm_36 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st39_fsm_36 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_sig_cseq_ST_st39_fsm_36 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_154);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_164);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_174);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_184);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_206);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_222);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_269);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_278);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_288);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_298);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_308);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_318);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_332);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_342);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_352);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_362);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_372);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_383);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_393);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_403);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_413);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_423);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_433);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_444);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_454);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_464);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_474);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_484);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_494);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_505);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_515);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_525);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_535);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_545);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_604);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_661);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_184 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg10_fsm_11);
    sensitive << ( ap_sig_bdd_342 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg11_fsm_12);
    sensitive << ( ap_sig_bdd_352 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg12_fsm_13);
    sensitive << ( ap_sig_bdd_362 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg13_fsm_14);
    sensitive << ( ap_sig_bdd_372 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg14_fsm_15);
    sensitive << ( ap_sig_bdd_154 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg15_fsm_16);
    sensitive << ( ap_sig_bdd_383 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg16_fsm_17);
    sensitive << ( ap_sig_bdd_393 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg17_fsm_18);
    sensitive << ( ap_sig_bdd_403 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg18_fsm_19);
    sensitive << ( ap_sig_bdd_413 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg19_fsm_20);
    sensitive << ( ap_sig_bdd_423 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_bdd_269 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg20_fsm_21);
    sensitive << ( ap_sig_bdd_433 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg21_fsm_22);
    sensitive << ( ap_sig_bdd_164 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg22_fsm_23);
    sensitive << ( ap_sig_bdd_444 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg23_fsm_24);
    sensitive << ( ap_sig_bdd_454 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg24_fsm_25);
    sensitive << ( ap_sig_bdd_464 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg25_fsm_26);
    sensitive << ( ap_sig_bdd_474 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg26_fsm_27);
    sensitive << ( ap_sig_bdd_484 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg27_fsm_28);
    sensitive << ( ap_sig_bdd_494 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg28_fsm_29);
    sensitive << ( ap_sig_bdd_174 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg29_fsm_30);
    sensitive << ( ap_sig_bdd_505 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg2_fsm_3);
    sensitive << ( ap_sig_bdd_278 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg30_fsm_31);
    sensitive << ( ap_sig_bdd_515 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg31_fsm_32);
    sensitive << ( ap_sig_bdd_525 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg32_fsm_33);
    sensitive << ( ap_sig_bdd_535 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg33_fsm_34);
    sensitive << ( ap_sig_bdd_545 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg34_fsm_35);
    sensitive << ( ap_sig_bdd_222 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg3_fsm_4);
    sensitive << ( ap_sig_bdd_288 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg4_fsm_5);
    sensitive << ( ap_sig_bdd_298 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg5_fsm_6);
    sensitive << ( ap_sig_bdd_308 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg6_fsm_7);
    sensitive << ( ap_sig_bdd_318 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg7_fsm_8);
    sensitive << ( ap_sig_bdd_140 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg8_fsm_9);
    sensitive << ( ap_sig_bdd_206 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg9_fsm_10);
    sensitive << ( ap_sig_bdd_332 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_55 );

    SC_METHOD(thread_ap_sig_cseq_ST_st39_fsm_36);
    sensitive << ( ap_sig_bdd_604 );

    SC_METHOD(thread_exitcond1_fu_168_p2);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( index_phi_fu_110_p4 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_ap_ce);

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_ap_start);
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0);
    sensitive << ( input1_M_imag_q0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0);
    sensitive << ( input1_M_real_q0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0);
    sensitive << ( input2_M_imag_q0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0);
    sensitive << ( input2_M_real_q0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_tmp);
    sensitive << ( index_reg_106 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_tmp1);
    sensitive << ( index_reg_106 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_tmp3);
    sensitive << ( index_reg_106 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_tmp4);
    sensitive << ( index_reg_106 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_tmp_3);
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_bdd_661 );

    SC_METHOD(thread_grp_TopAdder_addoperator_float_fu_118_tmp_32);
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_bdd_661 );

    SC_METHOD(thread_index_1_fu_174_p2);
    sensitive << ( index_phi_fu_110_p4 );

    SC_METHOD(thread_index_phi_fu_110_p4);
    sensitive << ( index_reg_106 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( index_1_reg_190 );

    SC_METHOD(thread_input1_M_imag_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input1_M_imag_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input1_M_real_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input1_M_real_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input2_M_imag_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input2_M_imag_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input2_M_real_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_input2_M_real_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg14_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg21_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg28_fsm_29 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg34_fsm_35 );
    sensitive << ( grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg9_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg10_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg11_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg12_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg13_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg16_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg17_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg18_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg19_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg20_fsm_21 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg23_fsm_24 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg24_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg25_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg26_fsm_27 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg27_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg30_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg31_fsm_32 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg32_fsm_33 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg33_fsm_34 );

    SC_METHOD(thread_output_M_imag_address0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( output_M_imag_addr_reg_200 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( tmp_fu_180_p1 );

    SC_METHOD(thread_output_M_imag_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_output_M_imag_d0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( reg_163 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_output_M_imag_we0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond1_reg_186_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_output_M_real_address0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( output_M_real_addr_reg_195 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );
    sensitive << ( tmp_fu_180_p1 );

    SC_METHOD(thread_output_M_real_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_output_M_real_d0);
    sensitive << ( reg_158 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_output_M_real_we0);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_186 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond1_reg_186_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg8_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg15_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg22_fsm_23 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg29_fsm_30 );

    SC_METHOD(thread_tmp_fu_180_p1);
    sensitive << ( index_reg_106 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_fu_168_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000000000000000000000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "TopAdder_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_55, "ap_sig_bdd_55");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, output_M_real_address0, "output_M_real_address0");
    sc_trace(mVcdFile, output_M_real_ce0, "output_M_real_ce0");
    sc_trace(mVcdFile, output_M_real_we0, "output_M_real_we0");
    sc_trace(mVcdFile, output_M_real_d0, "output_M_real_d0");
    sc_trace(mVcdFile, output_M_imag_address0, "output_M_imag_address0");
    sc_trace(mVcdFile, output_M_imag_ce0, "output_M_imag_ce0");
    sc_trace(mVcdFile, output_M_imag_we0, "output_M_imag_we0");
    sc_trace(mVcdFile, output_M_imag_d0, "output_M_imag_d0");
    sc_trace(mVcdFile, input1_M_real_address0, "input1_M_real_address0");
    sc_trace(mVcdFile, input1_M_real_ce0, "input1_M_real_ce0");
    sc_trace(mVcdFile, input1_M_real_q0, "input1_M_real_q0");
    sc_trace(mVcdFile, input1_M_imag_address0, "input1_M_imag_address0");
    sc_trace(mVcdFile, input1_M_imag_ce0, "input1_M_imag_ce0");
    sc_trace(mVcdFile, input1_M_imag_q0, "input1_M_imag_q0");
    sc_trace(mVcdFile, input2_M_real_address0, "input2_M_real_address0");
    sc_trace(mVcdFile, input2_M_real_ce0, "input2_M_real_ce0");
    sc_trace(mVcdFile, input2_M_real_q0, "input2_M_real_q0");
    sc_trace(mVcdFile, input2_M_imag_address0, "input2_M_imag_address0");
    sc_trace(mVcdFile, input2_M_imag_ce0, "input2_M_imag_ce0");
    sc_trace(mVcdFile, input2_M_imag_q0, "input2_M_imag_q0");
    sc_trace(mVcdFile, ap_return, "ap_return");
    sc_trace(mVcdFile, TopAdder_AXILiteS_s_axi_U_ap_dummy_ce, "TopAdder_AXILiteS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, index_reg_106, "index_reg_106");
    sc_trace(mVcdFile, reg_158, "reg_158");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg7_fsm_8, "ap_sig_cseq_ST_pp0_stg7_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_140, "ap_sig_bdd_140");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond1_reg_186, "exitcond1_reg_186");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg14_fsm_15, "ap_sig_cseq_ST_pp0_stg14_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_154, "ap_sig_bdd_154");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg21_fsm_22, "ap_sig_cseq_ST_pp0_stg21_fsm_22");
    sc_trace(mVcdFile, ap_sig_bdd_164, "ap_sig_bdd_164");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg28_fsm_29, "ap_sig_cseq_ST_pp0_stg28_fsm_29");
    sc_trace(mVcdFile, ap_sig_bdd_174, "ap_sig_bdd_174");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_184, "ap_sig_bdd_184");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, reg_163, "reg_163");
    sc_trace(mVcdFile, exitcond1_fu_168_p2, "exitcond1_fu_168_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond1_reg_186_pp0_it1, "ap_reg_ppstg_exitcond1_reg_186_pp0_it1");
    sc_trace(mVcdFile, index_1_fu_174_p2, "index_1_fu_174_p2");
    sc_trace(mVcdFile, index_1_reg_190, "index_1_reg_190");
    sc_trace(mVcdFile, output_M_real_addr_reg_195, "output_M_real_addr_reg_195");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg8_fsm_9, "ap_sig_cseq_ST_pp0_stg8_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_206, "ap_sig_bdd_206");
    sc_trace(mVcdFile, output_M_imag_addr_reg_200, "output_M_imag_addr_reg_200");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg34_fsm_35, "ap_sig_cseq_ST_pp0_stg34_fsm_35");
    sc_trace(mVcdFile, ap_sig_bdd_222, "ap_sig_bdd_222");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_start, "grp_TopAdder_addoperator_float_fu_118_ap_start");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_done, "grp_TopAdder_addoperator_float_fu_118_ap_done");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_idle, "grp_TopAdder_addoperator_float_fu_118_ap_idle");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_ready, "grp_TopAdder_addoperator_float_fu_118_ap_ready");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_ce, "grp_TopAdder_addoperator_float_fu_118_ap_ce");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0, "grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0, "grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0, "grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_tmp, "grp_TopAdder_addoperator_float_fu_118_tmp");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_tmp_3, "grp_TopAdder_addoperator_float_fu_118_tmp_3");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0, "grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0, "grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0, "grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_tmp1, "grp_TopAdder_addoperator_float_fu_118_tmp1");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_tmp_32, "grp_TopAdder_addoperator_float_fu_118_tmp_32");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0, "grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0, "grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0, "grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_tmp3, "grp_TopAdder_addoperator_float_fu_118_tmp3");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0, "grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0, "grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0, "grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_tmp4, "grp_TopAdder_addoperator_float_fu_118_tmp4");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_return_0, "grp_TopAdder_addoperator_float_fu_118_ap_return_0");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_return_1, "grp_TopAdder_addoperator_float_fu_118_ap_return_1");
    sc_trace(mVcdFile, index_phi_fu_110_p4, "index_phi_fu_110_p4");
    sc_trace(mVcdFile, grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg, "grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_269, "ap_sig_bdd_269");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg2_fsm_3, "ap_sig_cseq_ST_pp0_stg2_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_278, "ap_sig_bdd_278");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg3_fsm_4, "ap_sig_cseq_ST_pp0_stg3_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_288, "ap_sig_bdd_288");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg4_fsm_5, "ap_sig_cseq_ST_pp0_stg4_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_298, "ap_sig_bdd_298");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg5_fsm_6, "ap_sig_cseq_ST_pp0_stg5_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_308, "ap_sig_bdd_308");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg6_fsm_7, "ap_sig_cseq_ST_pp0_stg6_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_318, "ap_sig_bdd_318");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg9_fsm_10, "ap_sig_cseq_ST_pp0_stg9_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_332, "ap_sig_bdd_332");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg10_fsm_11, "ap_sig_cseq_ST_pp0_stg10_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_342, "ap_sig_bdd_342");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg11_fsm_12, "ap_sig_cseq_ST_pp0_stg11_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_352, "ap_sig_bdd_352");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg12_fsm_13, "ap_sig_cseq_ST_pp0_stg12_fsm_13");
    sc_trace(mVcdFile, ap_sig_bdd_362, "ap_sig_bdd_362");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg13_fsm_14, "ap_sig_cseq_ST_pp0_stg13_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_372, "ap_sig_bdd_372");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg15_fsm_16, "ap_sig_cseq_ST_pp0_stg15_fsm_16");
    sc_trace(mVcdFile, ap_sig_bdd_383, "ap_sig_bdd_383");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg16_fsm_17, "ap_sig_cseq_ST_pp0_stg16_fsm_17");
    sc_trace(mVcdFile, ap_sig_bdd_393, "ap_sig_bdd_393");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg17_fsm_18, "ap_sig_cseq_ST_pp0_stg17_fsm_18");
    sc_trace(mVcdFile, ap_sig_bdd_403, "ap_sig_bdd_403");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg18_fsm_19, "ap_sig_cseq_ST_pp0_stg18_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_413, "ap_sig_bdd_413");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg19_fsm_20, "ap_sig_cseq_ST_pp0_stg19_fsm_20");
    sc_trace(mVcdFile, ap_sig_bdd_423, "ap_sig_bdd_423");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg20_fsm_21, "ap_sig_cseq_ST_pp0_stg20_fsm_21");
    sc_trace(mVcdFile, ap_sig_bdd_433, "ap_sig_bdd_433");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg22_fsm_23, "ap_sig_cseq_ST_pp0_stg22_fsm_23");
    sc_trace(mVcdFile, ap_sig_bdd_444, "ap_sig_bdd_444");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg23_fsm_24, "ap_sig_cseq_ST_pp0_stg23_fsm_24");
    sc_trace(mVcdFile, ap_sig_bdd_454, "ap_sig_bdd_454");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg24_fsm_25, "ap_sig_cseq_ST_pp0_stg24_fsm_25");
    sc_trace(mVcdFile, ap_sig_bdd_464, "ap_sig_bdd_464");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg25_fsm_26, "ap_sig_cseq_ST_pp0_stg25_fsm_26");
    sc_trace(mVcdFile, ap_sig_bdd_474, "ap_sig_bdd_474");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg26_fsm_27, "ap_sig_cseq_ST_pp0_stg26_fsm_27");
    sc_trace(mVcdFile, ap_sig_bdd_484, "ap_sig_bdd_484");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg27_fsm_28, "ap_sig_cseq_ST_pp0_stg27_fsm_28");
    sc_trace(mVcdFile, ap_sig_bdd_494, "ap_sig_bdd_494");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg29_fsm_30, "ap_sig_cseq_ST_pp0_stg29_fsm_30");
    sc_trace(mVcdFile, ap_sig_bdd_505, "ap_sig_bdd_505");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg30_fsm_31, "ap_sig_cseq_ST_pp0_stg30_fsm_31");
    sc_trace(mVcdFile, ap_sig_bdd_515, "ap_sig_bdd_515");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg31_fsm_32, "ap_sig_cseq_ST_pp0_stg31_fsm_32");
    sc_trace(mVcdFile, ap_sig_bdd_525, "ap_sig_bdd_525");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg32_fsm_33, "ap_sig_cseq_ST_pp0_stg32_fsm_33");
    sc_trace(mVcdFile, ap_sig_bdd_535, "ap_sig_bdd_535");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg33_fsm_34, "ap_sig_cseq_ST_pp0_stg33_fsm_34");
    sc_trace(mVcdFile, ap_sig_bdd_545, "ap_sig_bdd_545");
    sc_trace(mVcdFile, tmp_fu_180_p1, "tmp_fu_180_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st39_fsm_36, "ap_sig_cseq_ST_st39_fsm_36");
    sc_trace(mVcdFile, ap_sig_bdd_604, "ap_sig_bdd_604");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_661, "ap_sig_bdd_661");
#endif

    }
    mHdltvinHandle.open("TopAdder.hdltvin.dat");
    mHdltvoutHandle.open("TopAdder.hdltvout.dat");
}

TopAdder::~TopAdder() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete TopAdder_AXILiteS_s_axi_U;
    delete grp_TopAdder_addoperator_float_fu_118;
}

void TopAdder::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_168_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg34_fsm_35.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg34_fsm_35.read()) && 
                     !esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg14_fsm_15.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg21_fsm_22.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg28_fsm_29.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_168_p2.read())))) {
            grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_TopAdder_addoperator_float_fu_118_ap_ready.read())) {
            grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        index_reg_106 = index_1_reg_190.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        index_reg_106 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
        ap_reg_ppstg_exitcond1_reg_186_pp0_it1 = exitcond1_reg_186.read();
        exitcond1_reg_186 = exitcond1_fu_168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()))) {
        index_1_reg_190 = index_1_fu_174_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read()))) {
        output_M_imag_addr_reg_200 =  (sc_lv<2>) (tmp_fu_180_p1.read());
        output_M_real_addr_reg_195 =  (sc_lv<2>) (tmp_fu_180_p1.read());
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg14_fsm_15.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg21_fsm_22.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg28_fsm_29.read())) || (esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        reg_158 = grp_TopAdder_addoperator_float_fu_118_ap_return_0.read();
        reg_163 = grp_TopAdder_addoperator_float_fu_118_ap_return_1.read();
    }
}

void TopAdder::thread_TopAdder_AXILiteS_s_axi_U_ap_dummy_ce() {
    TopAdder_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void TopAdder::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st39_fsm_36.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st39_fsm_36.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void TopAdder::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void TopAdder::thread_ap_sig_bdd_140() {
    ap_sig_bdd_140 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void TopAdder::thread_ap_sig_bdd_154() {
    ap_sig_bdd_154 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void TopAdder::thread_ap_sig_bdd_164() {
    ap_sig_bdd_164 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(22, 22));
}

void TopAdder::thread_ap_sig_bdd_174() {
    ap_sig_bdd_174 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(29, 29));
}

void TopAdder::thread_ap_sig_bdd_184() {
    ap_sig_bdd_184 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void TopAdder::thread_ap_sig_bdd_206() {
    ap_sig_bdd_206 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void TopAdder::thread_ap_sig_bdd_222() {
    ap_sig_bdd_222 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(35, 35));
}

void TopAdder::thread_ap_sig_bdd_269() {
    ap_sig_bdd_269 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void TopAdder::thread_ap_sig_bdd_278() {
    ap_sig_bdd_278 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void TopAdder::thread_ap_sig_bdd_288() {
    ap_sig_bdd_288 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void TopAdder::thread_ap_sig_bdd_298() {
    ap_sig_bdd_298 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void TopAdder::thread_ap_sig_bdd_308() {
    ap_sig_bdd_308 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void TopAdder::thread_ap_sig_bdd_318() {
    ap_sig_bdd_318 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void TopAdder::thread_ap_sig_bdd_332() {
    ap_sig_bdd_332 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void TopAdder::thread_ap_sig_bdd_342() {
    ap_sig_bdd_342 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void TopAdder::thread_ap_sig_bdd_352() {
    ap_sig_bdd_352 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void TopAdder::thread_ap_sig_bdd_362() {
    ap_sig_bdd_362 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void TopAdder::thread_ap_sig_bdd_372() {
    ap_sig_bdd_372 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void TopAdder::thread_ap_sig_bdd_383() {
    ap_sig_bdd_383 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void TopAdder::thread_ap_sig_bdd_393() {
    ap_sig_bdd_393 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void TopAdder::thread_ap_sig_bdd_403() {
    ap_sig_bdd_403 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void TopAdder::thread_ap_sig_bdd_413() {
    ap_sig_bdd_413 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void TopAdder::thread_ap_sig_bdd_423() {
    ap_sig_bdd_423 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void TopAdder::thread_ap_sig_bdd_433() {
    ap_sig_bdd_433 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(21, 21));
}

void TopAdder::thread_ap_sig_bdd_444() {
    ap_sig_bdd_444 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(23, 23));
}

void TopAdder::thread_ap_sig_bdd_454() {
    ap_sig_bdd_454 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(24, 24));
}

void TopAdder::thread_ap_sig_bdd_464() {
    ap_sig_bdd_464 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(25, 25));
}

void TopAdder::thread_ap_sig_bdd_474() {
    ap_sig_bdd_474 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(26, 26));
}

void TopAdder::thread_ap_sig_bdd_484() {
    ap_sig_bdd_484 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(27, 27));
}

void TopAdder::thread_ap_sig_bdd_494() {
    ap_sig_bdd_494 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(28, 28));
}

void TopAdder::thread_ap_sig_bdd_505() {
    ap_sig_bdd_505 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(30, 30));
}

void TopAdder::thread_ap_sig_bdd_515() {
    ap_sig_bdd_515 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(31, 31));
}

void TopAdder::thread_ap_sig_bdd_525() {
    ap_sig_bdd_525 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(32, 32));
}

void TopAdder::thread_ap_sig_bdd_535() {
    ap_sig_bdd_535 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(33, 33));
}

void TopAdder::thread_ap_sig_bdd_545() {
    ap_sig_bdd_545 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(34, 34));
}

void TopAdder::thread_ap_sig_bdd_55() {
    ap_sig_bdd_55 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void TopAdder::thread_ap_sig_bdd_604() {
    ap_sig_bdd_604 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(36, 36));
}

void TopAdder::thread_ap_sig_bdd_661() {
    ap_sig_bdd_661 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0));
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_184.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg10_fsm_11() {
    if (ap_sig_bdd_342.read()) {
        ap_sig_cseq_ST_pp0_stg10_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg10_fsm_11 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg11_fsm_12() {
    if (ap_sig_bdd_352.read()) {
        ap_sig_cseq_ST_pp0_stg11_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg11_fsm_12 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg12_fsm_13() {
    if (ap_sig_bdd_362.read()) {
        ap_sig_cseq_ST_pp0_stg12_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg12_fsm_13 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg13_fsm_14() {
    if (ap_sig_bdd_372.read()) {
        ap_sig_cseq_ST_pp0_stg13_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg13_fsm_14 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg14_fsm_15() {
    if (ap_sig_bdd_154.read()) {
        ap_sig_cseq_ST_pp0_stg14_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg14_fsm_15 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg15_fsm_16() {
    if (ap_sig_bdd_383.read()) {
        ap_sig_cseq_ST_pp0_stg15_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg15_fsm_16 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg16_fsm_17() {
    if (ap_sig_bdd_393.read()) {
        ap_sig_cseq_ST_pp0_stg16_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg16_fsm_17 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg17_fsm_18() {
    if (ap_sig_bdd_403.read()) {
        ap_sig_cseq_ST_pp0_stg17_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg17_fsm_18 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg18_fsm_19() {
    if (ap_sig_bdd_413.read()) {
        ap_sig_cseq_ST_pp0_stg18_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg18_fsm_19 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg19_fsm_20() {
    if (ap_sig_bdd_423.read()) {
        ap_sig_cseq_ST_pp0_stg19_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg19_fsm_20 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_bdd_269.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg20_fsm_21() {
    if (ap_sig_bdd_433.read()) {
        ap_sig_cseq_ST_pp0_stg20_fsm_21 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg20_fsm_21 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg21_fsm_22() {
    if (ap_sig_bdd_164.read()) {
        ap_sig_cseq_ST_pp0_stg21_fsm_22 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg21_fsm_22 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg22_fsm_23() {
    if (ap_sig_bdd_444.read()) {
        ap_sig_cseq_ST_pp0_stg22_fsm_23 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg22_fsm_23 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg23_fsm_24() {
    if (ap_sig_bdd_454.read()) {
        ap_sig_cseq_ST_pp0_stg23_fsm_24 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg23_fsm_24 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg24_fsm_25() {
    if (ap_sig_bdd_464.read()) {
        ap_sig_cseq_ST_pp0_stg24_fsm_25 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg24_fsm_25 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg25_fsm_26() {
    if (ap_sig_bdd_474.read()) {
        ap_sig_cseq_ST_pp0_stg25_fsm_26 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg25_fsm_26 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg26_fsm_27() {
    if (ap_sig_bdd_484.read()) {
        ap_sig_cseq_ST_pp0_stg26_fsm_27 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg26_fsm_27 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg27_fsm_28() {
    if (ap_sig_bdd_494.read()) {
        ap_sig_cseq_ST_pp0_stg27_fsm_28 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg27_fsm_28 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg28_fsm_29() {
    if (ap_sig_bdd_174.read()) {
        ap_sig_cseq_ST_pp0_stg28_fsm_29 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg28_fsm_29 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg29_fsm_30() {
    if (ap_sig_bdd_505.read()) {
        ap_sig_cseq_ST_pp0_stg29_fsm_30 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg29_fsm_30 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg2_fsm_3() {
    if (ap_sig_bdd_278.read()) {
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg30_fsm_31() {
    if (ap_sig_bdd_515.read()) {
        ap_sig_cseq_ST_pp0_stg30_fsm_31 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg30_fsm_31 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg31_fsm_32() {
    if (ap_sig_bdd_525.read()) {
        ap_sig_cseq_ST_pp0_stg31_fsm_32 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg31_fsm_32 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg32_fsm_33() {
    if (ap_sig_bdd_535.read()) {
        ap_sig_cseq_ST_pp0_stg32_fsm_33 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg32_fsm_33 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg33_fsm_34() {
    if (ap_sig_bdd_545.read()) {
        ap_sig_cseq_ST_pp0_stg33_fsm_34 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg33_fsm_34 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg34_fsm_35() {
    if (ap_sig_bdd_222.read()) {
        ap_sig_cseq_ST_pp0_stg34_fsm_35 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg34_fsm_35 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg3_fsm_4() {
    if (ap_sig_bdd_288.read()) {
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg4_fsm_5() {
    if (ap_sig_bdd_298.read()) {
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg5_fsm_6() {
    if (ap_sig_bdd_308.read()) {
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg6_fsm_7() {
    if (ap_sig_bdd_318.read()) {
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg7_fsm_8() {
    if (ap_sig_bdd_140.read()) {
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg8_fsm_9() {
    if (ap_sig_bdd_206.read()) {
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_pp0_stg9_fsm_10() {
    if (ap_sig_bdd_332.read()) {
        ap_sig_cseq_ST_pp0_stg9_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg9_fsm_10 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_55.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void TopAdder::thread_ap_sig_cseq_ST_st39_fsm_36() {
    if (ap_sig_bdd_604.read()) {
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_0;
    }
}

void TopAdder::thread_exitcond1_fu_168_p2() {
    exitcond1_fu_168_p2 = (!index_phi_fu_110_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(index_phi_fu_110_p4.read() == ap_const_lv2_3);
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_ap_ce() {
    grp_TopAdder_addoperator_float_fu_118_ap_ce = ap_const_logic_1;
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_ap_start() {
    grp_TopAdder_addoperator_float_fu_118_ap_start = grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0() {
    grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0 = input1_M_imag_q0.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0() {
    grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0 = input1_M_real_q0.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0() {
    grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0 = input2_M_imag_q0.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0() {
    grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0 = input2_M_real_q0.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_tmp() {
    grp_TopAdder_addoperator_float_fu_118_tmp = index_reg_106.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_tmp1() {
    grp_TopAdder_addoperator_float_fu_118_tmp1 = index_reg_106.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_tmp3() {
    grp_TopAdder_addoperator_float_fu_118_tmp3 = index_reg_106.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_tmp4() {
    grp_TopAdder_addoperator_float_fu_118_tmp4 = index_reg_106.read();
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_tmp_3() {
    if (ap_sig_bdd_661.read()) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_4;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_3;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_2;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_0;
        } else {
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = "XXXX";
        }
    } else {
        grp_TopAdder_addoperator_float_fu_118_tmp_3 = "XXXX";
    }
}

void TopAdder::thread_grp_TopAdder_addoperator_float_fu_118_tmp_32() {
    if (ap_sig_bdd_661.read()) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_4;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_3;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_2;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) {
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_0;
        } else {
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = "XXXX";
        }
    } else {
        grp_TopAdder_addoperator_float_fu_118_tmp_32 = "XXXX";
    }
}

void TopAdder::thread_index_1_fu_174_p2() {
    index_1_fu_174_p2 = (!index_phi_fu_110_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(index_phi_fu_110_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void TopAdder::thread_index_phi_fu_110_p4() {
    if ((esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        index_phi_fu_110_p4 = index_1_reg_190.read();
    } else {
        index_phi_fu_110_p4 = index_reg_106.read();
    }
}

void TopAdder::thread_input1_M_imag_address0() {
    input1_M_imag_address0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0.read();
}

void TopAdder::thread_input1_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg14_fsm_15.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg21_fsm_22.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg28_fsm_29.read())) || 
         (esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg12_fsm_13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg13_fsm_14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg16_fsm_17.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg17_fsm_18.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg18_fsm_19.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg19_fsm_20.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg20_fsm_21.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg23_fsm_24.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg24_fsm_25.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg25_fsm_26.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg26_fsm_27.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg27_fsm_28.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg30_fsm_31.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg31_fsm_32.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg32_fsm_33.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg33_fsm_34.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg34_fsm_35.read())))) {
        input1_M_imag_ce0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0.read();
    } else {
        input1_M_imag_ce0 = ap_const_logic_0;
    }
}

void TopAdder::thread_input1_M_real_address0() {
    input1_M_real_address0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0.read();
}

void TopAdder::thread_input1_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg14_fsm_15.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg21_fsm_22.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg28_fsm_29.read())) || 
         (esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg12_fsm_13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg13_fsm_14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg16_fsm_17.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg17_fsm_18.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg18_fsm_19.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg19_fsm_20.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg20_fsm_21.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg23_fsm_24.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg24_fsm_25.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg25_fsm_26.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg26_fsm_27.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg27_fsm_28.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg30_fsm_31.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg31_fsm_32.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg32_fsm_33.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg33_fsm_34.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg34_fsm_35.read())))) {
        input1_M_real_ce0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0.read();
    } else {
        input1_M_real_ce0 = ap_const_logic_0;
    }
}

void TopAdder::thread_input2_M_imag_address0() {
    input2_M_imag_address0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0.read();
}

void TopAdder::thread_input2_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg14_fsm_15.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg21_fsm_22.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg28_fsm_29.read())) || 
         (esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg12_fsm_13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg13_fsm_14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg16_fsm_17.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg17_fsm_18.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg18_fsm_19.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg19_fsm_20.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg20_fsm_21.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg23_fsm_24.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg24_fsm_25.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg25_fsm_26.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg26_fsm_27.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg27_fsm_28.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg30_fsm_31.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg31_fsm_32.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg32_fsm_33.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg33_fsm_34.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg34_fsm_35.read())))) {
        input2_M_imag_ce0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0.read();
    } else {
        input2_M_imag_ce0 = ap_const_logic_0;
    }
}

void TopAdder::thread_input2_M_real_address0() {
    input2_M_real_address0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0.read();
}

void TopAdder::thread_input2_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg14_fsm_15.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg21_fsm_22.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg28_fsm_29.read())) || 
         (esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg9_fsm_10.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg10_fsm_11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg11_fsm_12.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg12_fsm_13.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg13_fsm_14.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg16_fsm_17.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg17_fsm_18.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg18_fsm_19.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg19_fsm_20.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg20_fsm_21.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg23_fsm_24.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg24_fsm_25.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg25_fsm_26.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg26_fsm_27.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg27_fsm_28.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg30_fsm_31.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg31_fsm_32.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg32_fsm_33.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg33_fsm_34.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg34_fsm_35.read())))) {
        input2_M_real_ce0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0.read();
    } else {
        input2_M_real_ce0 = ap_const_logic_0;
    }
}

void TopAdder::thread_output_M_imag_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())))) {
        output_M_imag_address0 = output_M_imag_addr_reg_200.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read()))) {
        output_M_imag_address0 =  (sc_lv<2>) (tmp_fu_180_p1.read());
    } else {
        output_M_imag_address0 =  (sc_lv<2>) ("XX");
    }
}

void TopAdder::thread_output_M_imag_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())))) {
        output_M_imag_ce0 = ap_const_logic_1;
    } else {
        output_M_imag_ce0 = ap_const_logic_0;
    }
}

void TopAdder::thread_output_M_imag_d0() {
    output_M_imag_d0 = reg_163.read();
}

void TopAdder::thread_output_M_imag_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond1_reg_186_pp0_it1.read())))) {
        output_M_imag_we0 = ap_const_logic_1;
    } else {
        output_M_imag_we0 = ap_const_logic_0;
    }
}

void TopAdder::thread_output_M_real_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())))) {
        output_M_real_address0 = output_M_real_addr_reg_195.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read()))) {
        output_M_real_address0 =  (sc_lv<2>) (tmp_fu_180_p1.read());
    } else {
        output_M_real_address0 =  (sc_lv<2>) ("XX");
    }
}

void TopAdder::thread_output_M_real_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())))) {
        output_M_real_ce0 = ap_const_logic_1;
    } else {
        output_M_real_ce0 = ap_const_logic_0;
    }
}

void TopAdder::thread_output_M_real_d0() {
    output_M_real_d0 = reg_158.read();
}

void TopAdder::thread_output_M_real_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg8_fsm_9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg15_fsm_16.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg22_fsm_23.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_186.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg29_fsm_30.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond1_reg_186_pp0_it1.read())))) {
        output_M_real_we0 = ap_const_logic_1;
    } else {
        output_M_real_we0 = ap_const_logic_0;
    }
}

void TopAdder::thread_tmp_fu_180_p1() {
    tmp_fu_180_p1 = esl_zext<64,2>(index_reg_106.read());
}

void TopAdder::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_168_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st39_fsm_36;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st39_fsm_36;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_pp0_stg13_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_pp0_stg22_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_pp0_stg23_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_pp0_stg24_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_pp0_stg25_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_pp0_stg26_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_pp0_stg27_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_pp0_stg28_fsm_29;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_pp0_stg29_fsm_30;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_pp0_stg30_fsm_31;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_pp0_stg31_fsm_32;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_pp0_stg32_fsm_33;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_pp0_stg33_fsm_34;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_pp0_stg34_fsm_35;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void TopAdder::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

