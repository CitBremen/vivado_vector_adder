// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="TopAdder,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=108,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=4,HLS_SYN_FF=1207,HLS_SYN_LUT=1404}" *)

module TopAdder (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 37'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 37'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 37'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 37'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 37'b10000;
parameter    ap_ST_pp0_stg4_fsm_5 = 37'b100000;
parameter    ap_ST_pp0_stg5_fsm_6 = 37'b1000000;
parameter    ap_ST_pp0_stg6_fsm_7 = 37'b10000000;
parameter    ap_ST_pp0_stg7_fsm_8 = 37'b100000000;
parameter    ap_ST_pp0_stg8_fsm_9 = 37'b1000000000;
parameter    ap_ST_pp0_stg9_fsm_10 = 37'b10000000000;
parameter    ap_ST_pp0_stg10_fsm_11 = 37'b100000000000;
parameter    ap_ST_pp0_stg11_fsm_12 = 37'b1000000000000;
parameter    ap_ST_pp0_stg12_fsm_13 = 37'b10000000000000;
parameter    ap_ST_pp0_stg13_fsm_14 = 37'b100000000000000;
parameter    ap_ST_pp0_stg14_fsm_15 = 37'b1000000000000000;
parameter    ap_ST_pp0_stg15_fsm_16 = 37'b10000000000000000;
parameter    ap_ST_pp0_stg16_fsm_17 = 37'b100000000000000000;
parameter    ap_ST_pp0_stg17_fsm_18 = 37'b1000000000000000000;
parameter    ap_ST_pp0_stg18_fsm_19 = 37'b10000000000000000000;
parameter    ap_ST_pp0_stg19_fsm_20 = 37'b100000000000000000000;
parameter    ap_ST_pp0_stg20_fsm_21 = 37'b1000000000000000000000;
parameter    ap_ST_pp0_stg21_fsm_22 = 37'b10000000000000000000000;
parameter    ap_ST_pp0_stg22_fsm_23 = 37'b100000000000000000000000;
parameter    ap_ST_pp0_stg23_fsm_24 = 37'b1000000000000000000000000;
parameter    ap_ST_pp0_stg24_fsm_25 = 37'b10000000000000000000000000;
parameter    ap_ST_pp0_stg25_fsm_26 = 37'b100000000000000000000000000;
parameter    ap_ST_pp0_stg26_fsm_27 = 37'b1000000000000000000000000000;
parameter    ap_ST_pp0_stg27_fsm_28 = 37'b10000000000000000000000000000;
parameter    ap_ST_pp0_stg28_fsm_29 = 37'b100000000000000000000000000000;
parameter    ap_ST_pp0_stg29_fsm_30 = 37'b1000000000000000000000000000000;
parameter    ap_ST_pp0_stg30_fsm_31 = 37'b10000000000000000000000000000000;
parameter    ap_ST_pp0_stg31_fsm_32 = 37'b100000000000000000000000000000000;
parameter    ap_ST_pp0_stg32_fsm_33 = 37'b1000000000000000000000000000000000;
parameter    ap_ST_pp0_stg33_fsm_34 = 37'b10000000000000000000000000000000000;
parameter    ap_ST_pp0_stg34_fsm_35 = 37'b100000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_36 = 37'b1000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm = 37'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_55;
reg    ap_ready;
reg   [1:0] output_M_real_address0;
reg    output_M_real_ce0;
reg    output_M_real_we0;
wire   [31:0] output_M_real_d0;
reg   [1:0] output_M_imag_address0;
reg    output_M_imag_ce0;
reg    output_M_imag_we0;
wire   [31:0] output_M_imag_d0;
wire   [3:0] input1_M_real_address0;
reg    input1_M_real_ce0;
wire   [31:0] input1_M_real_q0;
wire   [3:0] input1_M_imag_address0;
reg    input1_M_imag_ce0;
wire   [31:0] input1_M_imag_q0;
wire   [1:0] input2_M_real_address0;
reg    input2_M_real_ce0;
wire   [31:0] input2_M_real_q0;
wire   [1:0] input2_M_imag_address0;
reg    input2_M_imag_ce0;
wire   [31:0] input2_M_imag_q0;
wire   [31:0] ap_return;
wire    TopAdder_AXILiteS_s_axi_U_ap_dummy_ce;
reg   [1:0] index_reg_106;
reg   [31:0] reg_158;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_8;
reg    ap_sig_bdd_140;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond1_reg_186;
reg    ap_sig_cseq_ST_pp0_stg14_fsm_15;
reg    ap_sig_bdd_154;
reg    ap_sig_cseq_ST_pp0_stg21_fsm_22;
reg    ap_sig_bdd_164;
reg    ap_sig_cseq_ST_pp0_stg28_fsm_29;
reg    ap_sig_bdd_174;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_184;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [31:0] reg_163;
wire   [0:0] exitcond1_fu_168_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_186_pp0_it1;
wire   [1:0] index_1_fu_174_p2;
reg   [1:0] index_1_reg_190;
reg   [1:0] output_M_real_addr_reg_195;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_9;
reg    ap_sig_bdd_206;
reg   [1:0] output_M_imag_addr_reg_200;
reg    ap_sig_cseq_ST_pp0_stg34_fsm_35;
reg    ap_sig_bdd_222;
wire    grp_TopAdder_addoperator_float_fu_118_ap_start;
wire    grp_TopAdder_addoperator_float_fu_118_ap_done;
wire    grp_TopAdder_addoperator_float_fu_118_ap_idle;
wire    grp_TopAdder_addoperator_float_fu_118_ap_ready;
wire    grp_TopAdder_addoperator_float_fu_118_ap_ce;
wire   [3:0] grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0;
wire    grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0;
wire   [31:0] grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0;
wire   [1:0] grp_TopAdder_addoperator_float_fu_118_tmp;
reg   [3:0] grp_TopAdder_addoperator_float_fu_118_tmp_3;
wire   [3:0] grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0;
wire    grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0;
wire   [31:0] grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0;
wire   [1:0] grp_TopAdder_addoperator_float_fu_118_tmp1;
reg   [3:0] grp_TopAdder_addoperator_float_fu_118_tmp_32;
wire   [1:0] grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0;
wire    grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0;
wire   [31:0] grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0;
wire   [1:0] grp_TopAdder_addoperator_float_fu_118_tmp3;
wire   [1:0] grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0;
wire    grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0;
wire   [31:0] grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0;
wire   [1:0] grp_TopAdder_addoperator_float_fu_118_tmp4;
wire   [31:0] grp_TopAdder_addoperator_float_fu_118_ap_return_0;
wire   [31:0] grp_TopAdder_addoperator_float_fu_118_ap_return_1;
reg   [1:0] index_phi_fu_110_p4;
reg    grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_269;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_278;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_288;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_5;
reg    ap_sig_bdd_298;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_6;
reg    ap_sig_bdd_308;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_7;
reg    ap_sig_bdd_318;
reg    ap_sig_cseq_ST_pp0_stg9_fsm_10;
reg    ap_sig_bdd_332;
reg    ap_sig_cseq_ST_pp0_stg10_fsm_11;
reg    ap_sig_bdd_342;
reg    ap_sig_cseq_ST_pp0_stg11_fsm_12;
reg    ap_sig_bdd_352;
reg    ap_sig_cseq_ST_pp0_stg12_fsm_13;
reg    ap_sig_bdd_362;
reg    ap_sig_cseq_ST_pp0_stg13_fsm_14;
reg    ap_sig_bdd_372;
reg    ap_sig_cseq_ST_pp0_stg15_fsm_16;
reg    ap_sig_bdd_383;
reg    ap_sig_cseq_ST_pp0_stg16_fsm_17;
reg    ap_sig_bdd_393;
reg    ap_sig_cseq_ST_pp0_stg17_fsm_18;
reg    ap_sig_bdd_403;
reg    ap_sig_cseq_ST_pp0_stg18_fsm_19;
reg    ap_sig_bdd_413;
reg    ap_sig_cseq_ST_pp0_stg19_fsm_20;
reg    ap_sig_bdd_423;
reg    ap_sig_cseq_ST_pp0_stg20_fsm_21;
reg    ap_sig_bdd_433;
reg    ap_sig_cseq_ST_pp0_stg22_fsm_23;
reg    ap_sig_bdd_444;
reg    ap_sig_cseq_ST_pp0_stg23_fsm_24;
reg    ap_sig_bdd_454;
reg    ap_sig_cseq_ST_pp0_stg24_fsm_25;
reg    ap_sig_bdd_464;
reg    ap_sig_cseq_ST_pp0_stg25_fsm_26;
reg    ap_sig_bdd_474;
reg    ap_sig_cseq_ST_pp0_stg26_fsm_27;
reg    ap_sig_bdd_484;
reg    ap_sig_cseq_ST_pp0_stg27_fsm_28;
reg    ap_sig_bdd_494;
reg    ap_sig_cseq_ST_pp0_stg29_fsm_30;
reg    ap_sig_bdd_505;
reg    ap_sig_cseq_ST_pp0_stg30_fsm_31;
reg    ap_sig_bdd_515;
reg    ap_sig_cseq_ST_pp0_stg31_fsm_32;
reg    ap_sig_bdd_525;
reg    ap_sig_cseq_ST_pp0_stg32_fsm_33;
reg    ap_sig_bdd_535;
reg    ap_sig_cseq_ST_pp0_stg33_fsm_34;
reg    ap_sig_bdd_545;
wire   [63:0] tmp_fu_180_p1;
reg    ap_sig_cseq_ST_st39_fsm_36;
reg    ap_sig_bdd_604;
reg   [36:0] ap_NS_fsm;
reg    ap_sig_bdd_661;


TopAdder_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
TopAdder_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( TopAdder_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .ap_return( ap_return ),
    .output_M_real_address0( output_M_real_address0 ),
    .output_M_real_ce0( output_M_real_ce0 ),
    .output_M_real_we0( output_M_real_we0 ),
    .output_M_real_d0( output_M_real_d0 ),
    .output_M_imag_address0( output_M_imag_address0 ),
    .output_M_imag_ce0( output_M_imag_ce0 ),
    .output_M_imag_we0( output_M_imag_we0 ),
    .output_M_imag_d0( output_M_imag_d0 ),
    .input1_M_real_address0( input1_M_real_address0 ),
    .input1_M_real_ce0( input1_M_real_ce0 ),
    .input1_M_real_q0( input1_M_real_q0 ),
    .input1_M_imag_address0( input1_M_imag_address0 ),
    .input1_M_imag_ce0( input1_M_imag_ce0 ),
    .input1_M_imag_q0( input1_M_imag_q0 ),
    .input2_M_real_address0( input2_M_real_address0 ),
    .input2_M_real_ce0( input2_M_real_ce0 ),
    .input2_M_real_q0( input2_M_real_q0 ),
    .input2_M_imag_address0( input2_M_imag_address0 ),
    .input2_M_imag_ce0( input2_M_imag_ce0 ),
    .input2_M_imag_q0( input2_M_imag_q0 )
);

TopAdder_addoperator_float grp_TopAdder_addoperator_float_fu_118(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_TopAdder_addoperator_float_fu_118_ap_start ),
    .ap_done( grp_TopAdder_addoperator_float_fu_118_ap_done ),
    .ap_idle( grp_TopAdder_addoperator_float_fu_118_ap_idle ),
    .ap_ready( grp_TopAdder_addoperator_float_fu_118_ap_ready ),
    .ap_ce( grp_TopAdder_addoperator_float_fu_118_ap_ce ),
    .p_x_M_real_address0( grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0 ),
    .p_x_M_real_ce0( grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0 ),
    .p_x_M_real_q0( grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0 ),
    .tmp( grp_TopAdder_addoperator_float_fu_118_tmp ),
    .tmp_3( grp_TopAdder_addoperator_float_fu_118_tmp_3 ),
    .p_x_M_imag_address0( grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0 ),
    .p_x_M_imag_ce0( grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0 ),
    .p_x_M_imag_q0( grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0 ),
    .tmp1( grp_TopAdder_addoperator_float_fu_118_tmp1 ),
    .tmp_32( grp_TopAdder_addoperator_float_fu_118_tmp_32 ),
    .p_y_M_real_address0( grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0 ),
    .p_y_M_real_ce0( grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0 ),
    .p_y_M_real_q0( grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0 ),
    .tmp3( grp_TopAdder_addoperator_float_fu_118_tmp3 ),
    .p_y_M_imag_address0( grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0 ),
    .p_y_M_imag_ce0( grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0 ),
    .p_y_M_imag_q0( grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0 ),
    .tmp4( grp_TopAdder_addoperator_float_fu_118_tmp4 ),
    .ap_return_0( grp_TopAdder_addoperator_float_fu_118_ap_return_0 ),
    .ap_return_1( grp_TopAdder_addoperator_float_fu_118_ap_return_1 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_168_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_35))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_35) & ~(exitcond1_reg_186 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg28_fsm_29)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_168_p2)))) begin
            grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_TopAdder_addoperator_float_fu_118_ap_ready)) begin
            grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        index_reg_106 <= index_1_reg_190;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        index_reg_106 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond1_reg_186_pp0_it1 <= exitcond1_reg_186;
        exitcond1_reg_186 <= exitcond1_fu_168_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        index_1_reg_190 <= index_1_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
        output_M_imag_addr_reg_200 <= tmp_fu_180_p1;
        output_M_real_addr_reg_195 <= tmp_fu_180_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg28_fsm_29)) | ((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        reg_158 <= grp_TopAdder_addoperator_float_fu_118_ap_return_0;
        reg_163 <= grp_TopAdder_addoperator_float_fu_118_ap_return_1;
    end
end

always @ (ap_sig_cseq_ST_st39_fsm_36) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_36)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st39_fsm_36) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_36)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_184) begin
    if (ap_sig_bdd_184) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_342) begin
    if (ap_sig_bdd_342) begin
        ap_sig_cseq_ST_pp0_stg10_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg10_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_352) begin
    if (ap_sig_bdd_352) begin
        ap_sig_cseq_ST_pp0_stg11_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg11_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_362) begin
    if (ap_sig_bdd_362) begin
        ap_sig_cseq_ST_pp0_stg12_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg12_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_372) begin
    if (ap_sig_bdd_372) begin
        ap_sig_cseq_ST_pp0_stg13_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg13_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_154) begin
    if (ap_sig_bdd_154) begin
        ap_sig_cseq_ST_pp0_stg14_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg14_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_383) begin
    if (ap_sig_bdd_383) begin
        ap_sig_cseq_ST_pp0_stg15_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg15_fsm_16 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_393) begin
    if (ap_sig_bdd_393) begin
        ap_sig_cseq_ST_pp0_stg16_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg16_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_403) begin
    if (ap_sig_bdd_403) begin
        ap_sig_cseq_ST_pp0_stg17_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg17_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_413) begin
    if (ap_sig_bdd_413) begin
        ap_sig_cseq_ST_pp0_stg18_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg18_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_423) begin
    if (ap_sig_bdd_423) begin
        ap_sig_cseq_ST_pp0_stg19_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg19_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_269) begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_433) begin
    if (ap_sig_bdd_433) begin
        ap_sig_cseq_ST_pp0_stg20_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg20_fsm_21 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_164) begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_pp0_stg21_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg21_fsm_22 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_444) begin
    if (ap_sig_bdd_444) begin
        ap_sig_cseq_ST_pp0_stg22_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg22_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_454) begin
    if (ap_sig_bdd_454) begin
        ap_sig_cseq_ST_pp0_stg23_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg23_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_464) begin
    if (ap_sig_bdd_464) begin
        ap_sig_cseq_ST_pp0_stg24_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg24_fsm_25 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_474) begin
    if (ap_sig_bdd_474) begin
        ap_sig_cseq_ST_pp0_stg25_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg25_fsm_26 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_484) begin
    if (ap_sig_bdd_484) begin
        ap_sig_cseq_ST_pp0_stg26_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg26_fsm_27 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_494) begin
    if (ap_sig_bdd_494) begin
        ap_sig_cseq_ST_pp0_stg27_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg27_fsm_28 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_174) begin
    if (ap_sig_bdd_174) begin
        ap_sig_cseq_ST_pp0_stg28_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg28_fsm_29 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_505) begin
    if (ap_sig_bdd_505) begin
        ap_sig_cseq_ST_pp0_stg29_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg29_fsm_30 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_278) begin
    if (ap_sig_bdd_278) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_515) begin
    if (ap_sig_bdd_515) begin
        ap_sig_cseq_ST_pp0_stg30_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg30_fsm_31 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_525) begin
    if (ap_sig_bdd_525) begin
        ap_sig_cseq_ST_pp0_stg31_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg31_fsm_32 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_535) begin
    if (ap_sig_bdd_535) begin
        ap_sig_cseq_ST_pp0_stg32_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg32_fsm_33 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_545) begin
    if (ap_sig_bdd_545) begin
        ap_sig_cseq_ST_pp0_stg33_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg33_fsm_34 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_222) begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_pp0_stg34_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg34_fsm_35 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_288) begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_298) begin
    if (ap_sig_bdd_298) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_308) begin
    if (ap_sig_bdd_308) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_318) begin
    if (ap_sig_bdd_318) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_140) begin
    if (ap_sig_bdd_140) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_206) begin
    if (ap_sig_bdd_206) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_332) begin
    if (ap_sig_bdd_332) begin
        ap_sig_cseq_ST_pp0_stg9_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg9_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_55) begin
    if (ap_sig_bdd_55) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_604) begin
    if (ap_sig_bdd_604) begin
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_36 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or ap_sig_bdd_661) begin
    if (ap_sig_bdd_661) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_4;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_3;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_2;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = ap_const_lv4_0;
        end else begin
            grp_TopAdder_addoperator_float_fu_118_tmp_3 = 'bx;
        end
    end else begin
        grp_TopAdder_addoperator_float_fu_118_tmp_3 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or ap_sig_bdd_661) begin
    if (ap_sig_bdd_661) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_4;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_3;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_2;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = ap_const_lv4_0;
        end else begin
            grp_TopAdder_addoperator_float_fu_118_tmp_32 = 'bx;
        end
    end else begin
        grp_TopAdder_addoperator_float_fu_118_tmp_32 = 'bx;
    end
end

always @ (index_reg_106 or exitcond1_reg_186 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or index_1_reg_190) begin
    if (((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        index_phi_fu_110_p4 = index_1_reg_190;
    end else begin
        index_phi_fu_110_p4 = index_reg_106;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_186 or ap_sig_cseq_ST_pp0_stg14_fsm_15 or ap_sig_cseq_ST_pp0_stg21_fsm_22 or ap_sig_cseq_ST_pp0_stg28_fsm_29 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg34_fsm_35 or grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg9_fsm_10 or ap_sig_cseq_ST_pp0_stg10_fsm_11 or ap_sig_cseq_ST_pp0_stg11_fsm_12 or ap_sig_cseq_ST_pp0_stg12_fsm_13 or ap_sig_cseq_ST_pp0_stg13_fsm_14 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg16_fsm_17 or ap_sig_cseq_ST_pp0_stg17_fsm_18 or ap_sig_cseq_ST_pp0_stg18_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_20 or ap_sig_cseq_ST_pp0_stg20_fsm_21 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg23_fsm_24 or ap_sig_cseq_ST_pp0_stg24_fsm_25 or ap_sig_cseq_ST_pp0_stg25_fsm_26 or ap_sig_cseq_ST_pp0_stg26_fsm_27 or ap_sig_cseq_ST_pp0_stg27_fsm_28 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or ap_sig_cseq_ST_pp0_stg30_fsm_31 or ap_sig_cseq_ST_pp0_stg31_fsm_32 or ap_sig_cseq_ST_pp0_stg32_fsm_33 or ap_sig_cseq_ST_pp0_stg33_fsm_34) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg28_fsm_29)) | ((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_11)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_12)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_13)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg13_fsm_14)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg16_fsm_17)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg17_fsm_18)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_19)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_20)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg20_fsm_21)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg23_fsm_24)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg24_fsm_25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg25_fsm_26)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_27)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg27_fsm_28)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_31)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg31_fsm_32)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg32_fsm_33)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg33_fsm_34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_35)))) begin
        input1_M_imag_ce0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_ce0;
    end else begin
        input1_M_imag_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_186 or ap_sig_cseq_ST_pp0_stg14_fsm_15 or ap_sig_cseq_ST_pp0_stg21_fsm_22 or ap_sig_cseq_ST_pp0_stg28_fsm_29 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg34_fsm_35 or grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg9_fsm_10 or ap_sig_cseq_ST_pp0_stg10_fsm_11 or ap_sig_cseq_ST_pp0_stg11_fsm_12 or ap_sig_cseq_ST_pp0_stg12_fsm_13 or ap_sig_cseq_ST_pp0_stg13_fsm_14 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg16_fsm_17 or ap_sig_cseq_ST_pp0_stg17_fsm_18 or ap_sig_cseq_ST_pp0_stg18_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_20 or ap_sig_cseq_ST_pp0_stg20_fsm_21 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg23_fsm_24 or ap_sig_cseq_ST_pp0_stg24_fsm_25 or ap_sig_cseq_ST_pp0_stg25_fsm_26 or ap_sig_cseq_ST_pp0_stg26_fsm_27 or ap_sig_cseq_ST_pp0_stg27_fsm_28 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or ap_sig_cseq_ST_pp0_stg30_fsm_31 or ap_sig_cseq_ST_pp0_stg31_fsm_32 or ap_sig_cseq_ST_pp0_stg32_fsm_33 or ap_sig_cseq_ST_pp0_stg33_fsm_34) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg28_fsm_29)) | ((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_11)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_12)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_13)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg13_fsm_14)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg16_fsm_17)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg17_fsm_18)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_19)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_20)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg20_fsm_21)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg23_fsm_24)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg24_fsm_25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg25_fsm_26)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_27)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg27_fsm_28)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_31)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg31_fsm_32)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg32_fsm_33)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg33_fsm_34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_35)))) begin
        input1_M_real_ce0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_real_ce0;
    end else begin
        input1_M_real_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_186 or ap_sig_cseq_ST_pp0_stg14_fsm_15 or ap_sig_cseq_ST_pp0_stg21_fsm_22 or ap_sig_cseq_ST_pp0_stg28_fsm_29 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg34_fsm_35 or grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg9_fsm_10 or ap_sig_cseq_ST_pp0_stg10_fsm_11 or ap_sig_cseq_ST_pp0_stg11_fsm_12 or ap_sig_cseq_ST_pp0_stg12_fsm_13 or ap_sig_cseq_ST_pp0_stg13_fsm_14 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg16_fsm_17 or ap_sig_cseq_ST_pp0_stg17_fsm_18 or ap_sig_cseq_ST_pp0_stg18_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_20 or ap_sig_cseq_ST_pp0_stg20_fsm_21 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg23_fsm_24 or ap_sig_cseq_ST_pp0_stg24_fsm_25 or ap_sig_cseq_ST_pp0_stg25_fsm_26 or ap_sig_cseq_ST_pp0_stg26_fsm_27 or ap_sig_cseq_ST_pp0_stg27_fsm_28 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or ap_sig_cseq_ST_pp0_stg30_fsm_31 or ap_sig_cseq_ST_pp0_stg31_fsm_32 or ap_sig_cseq_ST_pp0_stg32_fsm_33 or ap_sig_cseq_ST_pp0_stg33_fsm_34) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg28_fsm_29)) | ((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_11)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_12)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_13)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg13_fsm_14)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg16_fsm_17)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg17_fsm_18)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_19)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_20)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg20_fsm_21)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg23_fsm_24)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg24_fsm_25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg25_fsm_26)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_27)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg27_fsm_28)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_31)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg31_fsm_32)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg32_fsm_33)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg33_fsm_34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_35)))) begin
        input2_M_imag_ce0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_ce0;
    end else begin
        input2_M_imag_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_reg_ppiten_pp0_it0 or exitcond1_reg_186 or ap_sig_cseq_ST_pp0_stg14_fsm_15 or ap_sig_cseq_ST_pp0_stg21_fsm_22 or ap_sig_cseq_ST_pp0_stg28_fsm_29 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg34_fsm_35 or grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg9_fsm_10 or ap_sig_cseq_ST_pp0_stg10_fsm_11 or ap_sig_cseq_ST_pp0_stg11_fsm_12 or ap_sig_cseq_ST_pp0_stg12_fsm_13 or ap_sig_cseq_ST_pp0_stg13_fsm_14 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg16_fsm_17 or ap_sig_cseq_ST_pp0_stg17_fsm_18 or ap_sig_cseq_ST_pp0_stg18_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_20 or ap_sig_cseq_ST_pp0_stg20_fsm_21 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg23_fsm_24 or ap_sig_cseq_ST_pp0_stg24_fsm_25 or ap_sig_cseq_ST_pp0_stg25_fsm_26 or ap_sig_cseq_ST_pp0_stg26_fsm_27 or ap_sig_cseq_ST_pp0_stg27_fsm_28 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or ap_sig_cseq_ST_pp0_stg30_fsm_31 or ap_sig_cseq_ST_pp0_stg31_fsm_32 or ap_sig_cseq_ST_pp0_stg32_fsm_33 or ap_sig_cseq_ST_pp0_stg33_fsm_34) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg28_fsm_29)) | ((exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_11)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_12)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_13)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg13_fsm_14)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg16_fsm_17)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg17_fsm_18)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_19)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_20)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg20_fsm_21)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg23_fsm_24)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg24_fsm_25)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg25_fsm_26)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_27)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg27_fsm_28)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_31)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg31_fsm_32)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg32_fsm_33)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg33_fsm_34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_35)))) begin
        input2_M_real_ce0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_real_ce0;
    end else begin
        input2_M_real_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or output_M_imag_addr_reg_200 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or tmp_fu_180_p1) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)))) begin
        output_M_imag_address0 = output_M_imag_addr_reg_200;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
        output_M_imag_address0 = tmp_fu_180_p1;
    end else begin
        output_M_imag_address0 = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)))) begin
        output_M_imag_ce0 = ap_const_logic_1;
    end else begin
        output_M_imag_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or exitcond1_reg_186 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_186_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_186_pp0_it1)))) begin
        output_M_imag_we0 = ap_const_logic_1;
    end else begin
        output_M_imag_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or output_M_real_addr_reg_195 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30 or tmp_fu_180_p1) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)))) begin
        output_M_real_address0 = output_M_real_addr_reg_195;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9))) begin
        output_M_real_address0 = tmp_fu_180_p1;
    end else begin
        output_M_real_address0 = 'bx;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)))) begin
        output_M_real_ce0 = ap_const_logic_1;
    end else begin
        output_M_real_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or exitcond1_reg_186 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_186_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg15_fsm_16 or ap_sig_cseq_ST_pp0_stg22_fsm_23 or ap_sig_cseq_ST_pp0_stg29_fsm_30) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_16)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_23)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg29_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_186_pp0_it1)))) begin
        output_M_real_we0 = ap_const_logic_1;
    end else begin
        output_M_real_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond1_fu_168_p2 or ap_sig_cseq_ST_pp0_stg1_fsm_2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond1_fu_168_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_36;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_36;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
        end
        ap_ST_pp0_stg4_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
        end
        ap_ST_pp0_stg5_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
        end
        ap_ST_pp0_stg6_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
        end
        ap_ST_pp0_stg7_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_9;
        end
        ap_ST_pp0_stg8_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_10;
        end
        ap_ST_pp0_stg9_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_11;
        end
        ap_ST_pp0_stg10_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_12;
        end
        ap_ST_pp0_stg11_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_13;
        end
        ap_ST_pp0_stg12_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg13_fsm_14;
        end
        ap_ST_pp0_stg13_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_15;
        end
        ap_ST_pp0_stg14_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_16;
        end
        ap_ST_pp0_stg15_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_17;
        end
        ap_ST_pp0_stg16_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_18;
        end
        ap_ST_pp0_stg17_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_19;
        end
        ap_ST_pp0_stg18_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_20;
        end
        ap_ST_pp0_stg19_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_21;
        end
        ap_ST_pp0_stg20_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_22;
        end
        ap_ST_pp0_stg21_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg22_fsm_23;
        end
        ap_ST_pp0_stg22_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg23_fsm_24;
        end
        ap_ST_pp0_stg23_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg24_fsm_25;
        end
        ap_ST_pp0_stg24_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg25_fsm_26;
        end
        ap_ST_pp0_stg25_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg26_fsm_27;
        end
        ap_ST_pp0_stg26_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg27_fsm_28;
        end
        ap_ST_pp0_stg27_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg28_fsm_29;
        end
        ap_ST_pp0_stg28_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg29_fsm_30;
        end
        ap_ST_pp0_stg29_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg30_fsm_31;
        end
        ap_ST_pp0_stg30_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg31_fsm_32;
        end
        ap_ST_pp0_stg31_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg32_fsm_33;
        end
        ap_ST_pp0_stg32_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg33_fsm_34;
        end
        ap_ST_pp0_stg33_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg34_fsm_35;
        end
        ap_ST_pp0_stg34_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st39_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign TopAdder_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign ap_return = ap_const_lv32_0;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_140 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_154 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_164 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_174 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_184 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_206 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_278 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_298 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_308 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_318 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_332 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_352 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_362 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_372 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_383 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_393 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_403 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_413 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_423 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_433 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_444 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_454 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_464 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_474 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_484 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_494 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_505 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_515 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_525 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_535 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_545 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_55 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_604 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end


always @ (ap_reg_ppiten_pp0_it0 or exitcond1_reg_186) begin
    ap_sig_bdd_661 = ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_186 == ap_const_lv1_0));
end

assign exitcond1_fu_168_p2 = (index_phi_fu_110_p4 == ap_const_lv2_3? 1'b1: 1'b0);

assign grp_TopAdder_addoperator_float_fu_118_ap_ce = ap_const_logic_1;

assign grp_TopAdder_addoperator_float_fu_118_ap_start = grp_TopAdder_addoperator_float_fu_118_ap_start_ap_start_reg;

assign grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_q0 = input1_M_imag_q0;

assign grp_TopAdder_addoperator_float_fu_118_p_x_M_real_q0 = input1_M_real_q0;

assign grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_q0 = input2_M_imag_q0;

assign grp_TopAdder_addoperator_float_fu_118_p_y_M_real_q0 = input2_M_real_q0;

assign grp_TopAdder_addoperator_float_fu_118_tmp = index_reg_106;

assign grp_TopAdder_addoperator_float_fu_118_tmp1 = index_reg_106;

assign grp_TopAdder_addoperator_float_fu_118_tmp3 = index_reg_106;

assign grp_TopAdder_addoperator_float_fu_118_tmp4 = index_reg_106;

assign index_1_fu_174_p2 = (index_phi_fu_110_p4 + ap_const_lv2_1);

assign input1_M_imag_address0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_imag_address0;

assign input1_M_real_address0 = grp_TopAdder_addoperator_float_fu_118_p_x_M_real_address0;

assign input2_M_imag_address0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_imag_address0;

assign input2_M_real_address0 = grp_TopAdder_addoperator_float_fu_118_p_y_M_real_address0;

assign output_M_imag_d0 = reg_163;

assign output_M_real_d0 = reg_158;

assign tmp_fu_180_p1 = index_reg_106;


endmodule //TopAdder

