

================================================================
== Vivado HLS Report for 'TopAdder'
================================================================
* Date:           Sat May 21 15:26:55 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        complexAdder
* Solution:       Optimized
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.26|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  108|  108|  109|  109|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- outerloop  |  106|  106|        37|         35|          1|     3|    yes   |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 35, depth = 37


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 39
* Pipeline: 1
  Pipeline-0: II = 35, D = 37, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	39  / (exitcond1)
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	2  / true
39 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_40 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([3 x float]* %output_M_real), !map !7

ST_1: stg_41 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([3 x float]* %output_M_imag), !map !13

ST_1: stg_42 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([15 x float]* %input1_M_real), !map !17

ST_1: stg_43 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([15 x float]* %input1_M_imag), !map !23

ST_1: stg_44 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([3 x float]* %input2_M_real), !map !27

ST_1: stg_45 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([3 x float]* %input2_M_imag), !map !31

ST_1: stg_46 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !35

ST_1: stg_47 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @TopAdder_str) nounwind

ST_1: stg_48 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([3 x float]* %output_M_real, [3 x float]* %output_M_imag, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_49 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface([3 x float]* %input2_M_real, [3 x float]* %input2_M_imag, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: empty [1/1] 0.00ns
:10  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([15 x float]* %input1_M_real, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6)

ST_1: empty_8 [1/1] 0.00ns
:11  %empty_8 = call i32 (...)* @_ssdm_op_SpecMemCore([15 x float]* %input1_M_imag, [1 x i8]* @p_str7, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str7, i32 -1, [1 x i8]* @p_str7, [1 x i8]* @p_str7, [1 x i8]* @p_str7)

ST_1: stg_52 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecInterface([15 x float]* %input1_M_real, [15 x float]* %input1_M_imag, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_53 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: empty_9 [1/1] 0.00ns
:14  %empty_9 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x float]* %output_M_real, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4)

ST_1: empty_10 [1/1] 0.00ns
:15  %empty_10 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x float]* %output_M_imag, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5)

ST_1: stg_56 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecInterface([3 x float]* %output_M_real, [3 x float]* %output_M_imag, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_57 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecInterface([15 x float]* %input1_M_real, [15 x float]* %input1_M_imag, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: empty_11 [1/1] 0.00ns
:18  %empty_11 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x float]* %input2_M_real, [1 x i8]* @p_str8, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str8, i32 -1, [1 x i8]* @p_str8, [1 x i8]* @p_str8, [1 x i8]* @p_str8)

ST_1: empty_12 [1/1] 0.00ns
:19  %empty_12 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x float]* %input2_M_imag, [1 x i8]* @p_str9, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str9, i32 -1, [1 x i8]* @p_str9, [1 x i8]* @p_str9, [1 x i8]* @p_str9)

ST_1: stg_60 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface([3 x float]* %input2_M_real, [3 x float]* %input2_M_imag, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_61 [1/1] 1.57ns
:21  br label %1


 <State 2>: 1.36ns
ST_2: index [1/1] 0.00ns
:0  %index = phi i2 [ 0, %0 ], [ %index_1, %2 ]

ST_2: exitcond1 [1/1] 1.36ns
:1  %exitcond1 = icmp eq i2 %index, -1

ST_2: index_1 [1/1] 0.80ns
:2  %index_1 = add i2 %index, 1

ST_2: stg_65 [1/1] 0.00ns
:3  br i1 %exitcond1, label %3, label %2


 <State 3>: 5.06ns
ST_3: tmp_s [7/7] 5.06ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 4>: 7.26ns
ST_4: tmp_s [6/7] 7.26ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 5>: 7.26ns
ST_5: tmp_s [5/7] 7.26ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 6>: 7.26ns
ST_6: tmp_s [4/7] 7.26ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 7>: 7.26ns
ST_7: tmp_s [3/7] 7.26ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 8>: 7.26ns
ST_8: tmp_s [2/7] 7.26ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 9>: 7.26ns
ST_9: tmp_s [1/7] 7.26ns
:7  %tmp_s = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 0, [15 x float]* %input1_M_imag, i2 %index, i4 0, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)

ST_9: p_0 [1/1] 0.00ns
:8  %p_0 = extractvalue { float, float } %tmp_s, 0

ST_9: p_1 [1/1] 0.00ns
:9  %p_1 = extractvalue { float, float } %tmp_s, 1


 <State 10>: 5.06ns
ST_10: tmp [1/1] 0.00ns
:4  %tmp = zext i2 %index to i64

ST_10: output_M_real_addr [1/1] 0.00ns
:5  %output_M_real_addr = getelementptr [3 x float]* %output_M_real, i64 0, i64 %tmp

ST_10: output_M_imag_addr [1/1] 0.00ns
:6  %output_M_imag_addr = getelementptr [3 x float]* %output_M_imag, i64 0, i64 %tmp

ST_10: stg_78 [1/1] 2.39ns
:10  store float %p_0, float* %output_M_real_addr, align 4

ST_10: stg_79 [1/1] 2.39ns
:11  store float %p_1, float* %output_M_imag_addr, align 4

ST_10: tmp_2 [7/7] 5.06ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 11>: 7.26ns
ST_11: tmp_2 [6/7] 7.26ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 12>: 7.26ns
ST_12: tmp_2 [5/7] 7.26ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 13>: 7.26ns
ST_13: tmp_2 [4/7] 7.26ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 14>: 7.26ns
ST_14: tmp_2 [3/7] 7.26ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 15>: 7.26ns
ST_15: tmp_2 [2/7] 7.26ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 16>: 7.26ns
ST_16: tmp_2 [1/7] 7.26ns
:12  %tmp_2 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 1, [15 x float]* %input1_M_imag, i2 %index, i4 1, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)

ST_16: p_0_0_1 [1/1] 0.00ns
:13  %p_0_0_1 = extractvalue { float, float } %tmp_2, 0

ST_16: p_1_0_1 [1/1] 0.00ns
:14  %p_1_0_1 = extractvalue { float, float } %tmp_2, 1


 <State 17>: 5.06ns
ST_17: stg_89 [1/1] 2.39ns
:15  store float %p_0_0_1, float* %output_M_real_addr, align 4

ST_17: stg_90 [1/1] 2.39ns
:16  store float %p_1_0_1, float* %output_M_imag_addr, align 4

ST_17: tmp_3 [7/7] 5.06ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 18>: 7.26ns
ST_18: tmp_3 [6/7] 7.26ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 19>: 7.26ns
ST_19: tmp_3 [5/7] 7.26ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 20>: 7.26ns
ST_20: tmp_3 [4/7] 7.26ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 21>: 7.26ns
ST_21: tmp_3 [3/7] 7.26ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 22>: 7.26ns
ST_22: tmp_3 [2/7] 7.26ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 23>: 7.26ns
ST_23: tmp_3 [1/7] 7.26ns
:17  %tmp_3 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 2, [15 x float]* %input1_M_imag, i2 %index, i4 2, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)

ST_23: p_0_0_2 [1/1] 0.00ns
:18  %p_0_0_2 = extractvalue { float, float } %tmp_3, 0

ST_23: p_1_0_2 [1/1] 0.00ns
:19  %p_1_0_2 = extractvalue { float, float } %tmp_3, 1


 <State 24>: 5.06ns
ST_24: stg_100 [1/1] 2.39ns
:20  store float %p_0_0_2, float* %output_M_real_addr, align 4

ST_24: stg_101 [1/1] 2.39ns
:21  store float %p_1_0_2, float* %output_M_imag_addr, align 4

ST_24: tmp_5 [7/7] 5.06ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 25>: 7.26ns
ST_25: tmp_5 [6/7] 7.26ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 26>: 7.26ns
ST_26: tmp_5 [5/7] 7.26ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 27>: 7.26ns
ST_27: tmp_5 [4/7] 7.26ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 28>: 7.26ns
ST_28: tmp_5 [3/7] 7.26ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 29>: 7.26ns
ST_29: tmp_5 [2/7] 7.26ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 30>: 7.26ns
ST_30: tmp_5 [1/7] 7.26ns
:22  %tmp_5 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 3, [15 x float]* %input1_M_imag, i2 %index, i4 3, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)

ST_30: p_0_0_3 [1/1] 0.00ns
:23  %p_0_0_3 = extractvalue { float, float } %tmp_5, 0

ST_30: p_1_0_3 [1/1] 0.00ns
:24  %p_1_0_3 = extractvalue { float, float } %tmp_5, 1


 <State 31>: 5.06ns
ST_31: stg_111 [1/1] 2.39ns
:25  store float %p_0_0_3, float* %output_M_real_addr, align 4

ST_31: stg_112 [1/1] 2.39ns
:26  store float %p_1_0_3, float* %output_M_imag_addr, align 4

ST_31: tmp_4 [7/7] 5.06ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 32>: 7.26ns
ST_32: tmp_4 [6/7] 7.26ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 33>: 7.26ns
ST_33: tmp_4 [5/7] 7.26ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 34>: 7.26ns
ST_34: tmp_4 [4/7] 7.26ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 35>: 7.26ns
ST_35: tmp_4 [3/7] 7.26ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 36>: 7.26ns
ST_36: tmp_4 [2/7] 7.26ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)


 <State 37>: 7.26ns
ST_37: tmp_4 [1/7] 7.26ns
:27  %tmp_4 = call fastcc { float, float } @"TopAdder_operator+<float>"([15 x float]* %input1_M_real, i2 %index, i4 4, [15 x float]* %input1_M_imag, i2 %index, i4 4, [3 x float]* %input2_M_real, i2 %index, [3 x float]* %input2_M_imag, i2 %index)

ST_37: p_0_0_4 [1/1] 0.00ns
:28  %p_0_0_4 = extractvalue { float, float } %tmp_4, 0

ST_37: p_1_0_4 [1/1] 0.00ns
:29  %p_1_0_4 = extractvalue { float, float } %tmp_4, 1


 <State 38>: 2.39ns
ST_38: empty_13 [1/1] 0.00ns
:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_38: stg_123 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str3) nounwind

ST_38: tmp_1 [1/1] 0.00ns
:2  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str3)

ST_38: stg_125 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_38: stg_126 [1/1] 2.39ns
:30  store float %p_0_0_4, float* %output_M_real_addr, align 4

ST_38: stg_127 [1/1] 2.39ns
:31  store float %p_1_0_4, float* %output_M_imag_addr, align 4

ST_38: empty_14 [1/1] 0.00ns
:32  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str3, i32 %tmp_1)

ST_38: stg_129 [1/1] 0.00ns
:33  br label %1


 <State 39>: 0.00ns
ST_39: stg_130 [1/1] 0.00ns
:0  ret i32 0



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ output_M_real]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; mode=0x72bb03bf70; pingpong=0; private_global=0; MemPort=[0]; IO mode=ap_memory:ce=0
Port [ output_M_imag]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; mode=0x72bb03b430; pingpong=0; private_global=0; MemPort=[0]; IO mode=ap_memory:ce=0
Port [ input1_M_real]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x72bb03a470; pingpong=0; private_global=0; MemPort=[1]; IO mode=ap_memory:ce=0
Port [ input1_M_imag]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x72bb03c120; pingpong=0; private_global=0; MemPort=[1]; IO mode=ap_memory:ce=0
Port [ input2_M_real]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x72bb03b5e0; pingpong=0; private_global=0; MemPort=[1]; IO mode=ap_memory:ce=0
Port [ input2_M_imag]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x72bb03bd30; pingpong=0; private_global=0; MemPort=[1]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
stg_40             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_41             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_42             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_43             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_44             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_45             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_46             (specbitsmap      ) [ 0000000000000000000000000000000000000000]
stg_47             (spectopmodule    ) [ 0000000000000000000000000000000000000000]
stg_48             (specinterface    ) [ 0000000000000000000000000000000000000000]
stg_49             (specinterface    ) [ 0000000000000000000000000000000000000000]
empty              (specmemcore      ) [ 0000000000000000000000000000000000000000]
empty_8            (specmemcore      ) [ 0000000000000000000000000000000000000000]
stg_52             (specinterface    ) [ 0000000000000000000000000000000000000000]
stg_53             (specinterface    ) [ 0000000000000000000000000000000000000000]
empty_9            (specmemcore      ) [ 0000000000000000000000000000000000000000]
empty_10           (specmemcore      ) [ 0000000000000000000000000000000000000000]
stg_56             (specinterface    ) [ 0000000000000000000000000000000000000000]
stg_57             (specinterface    ) [ 0000000000000000000000000000000000000000]
empty_11           (specmemcore      ) [ 0000000000000000000000000000000000000000]
empty_12           (specmemcore      ) [ 0000000000000000000000000000000000000000]
stg_60             (specinterface    ) [ 0000000000000000000000000000000000000000]
stg_61             (br               ) [ 0111111111111111111111111111111111111110]
index              (phi              ) [ 0011111111111111111111111111111100000000]
exitcond1          (icmp             ) [ 0011111111111111111111111111111111111110]
index_1            (add              ) [ 0111111111111111111111111111111111111110]
stg_65             (br               ) [ 0000000000000000000000000000000000000000]
tmp_s              (call             ) [ 0000000000000000000000000000000000000000]
p_0                (extractvalue     ) [ 0000000000100000000000000000000000000000]
p_1                (extractvalue     ) [ 0000000000100000000000000000000000000000]
tmp                (zext             ) [ 0000000000000000000000000000000000000000]
output_M_real_addr (getelementptr    ) [ 0011000000011111111111111111111111111110]
output_M_imag_addr (getelementptr    ) [ 0011000000011111111111111111111111111110]
stg_78             (store            ) [ 0000000000000000000000000000000000000000]
stg_79             (store            ) [ 0000000000000000000000000000000000000000]
tmp_2              (call             ) [ 0000000000000000000000000000000000000000]
p_0_0_1            (extractvalue     ) [ 0000000000000000010000000000000000000000]
p_1_0_1            (extractvalue     ) [ 0000000000000000010000000000000000000000]
stg_89             (store            ) [ 0000000000000000000000000000000000000000]
stg_90             (store            ) [ 0000000000000000000000000000000000000000]
tmp_3              (call             ) [ 0000000000000000000000000000000000000000]
p_0_0_2            (extractvalue     ) [ 0000000000000000000000001000000000000000]
p_1_0_2            (extractvalue     ) [ 0000000000000000000000001000000000000000]
stg_100            (store            ) [ 0000000000000000000000000000000000000000]
stg_101            (store            ) [ 0000000000000000000000000000000000000000]
tmp_5              (call             ) [ 0000000000000000000000000000000000000000]
p_0_0_3            (extractvalue     ) [ 0000000000000000000000000000000100000000]
p_1_0_3            (extractvalue     ) [ 0000000000000000000000000000000100000000]
stg_111            (store            ) [ 0000000000000000000000000000000000000000]
stg_112            (store            ) [ 0000000000000000000000000000000000000000]
tmp_4              (call             ) [ 0000000000000000000000000000000000000000]
p_0_0_4            (extractvalue     ) [ 0001000000000000000000000000000000000010]
p_1_0_4            (extractvalue     ) [ 0001000000000000000000000000000000000010]
empty_13           (speclooptripcount) [ 0000000000000000000000000000000000000000]
stg_123            (specloopname     ) [ 0000000000000000000000000000000000000000]
tmp_1              (specregionbegin  ) [ 0000000000000000000000000000000000000000]
stg_125            (specpipeline     ) [ 0000000000000000000000000000000000000000]
stg_126            (store            ) [ 0000000000000000000000000000000000000000]
stg_127            (store            ) [ 0000000000000000000000000000000000000000]
empty_14           (specregionend    ) [ 0000000000000000000000000000000000000000]
stg_129            (br               ) [ 0111111111111111111111111111111111111110]
stg_130            (ret              ) [ 0000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="output_M_real">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="output_M_real"/><MemPortTyVec>0 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="output_M_imag">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="output_M_imag"/><MemPortTyVec>0 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="input1_M_real">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="input1_M_real"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="input1_M_imag">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="input1_M_imag"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="input2_M_real">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="input2_M_real"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="input2_M_imag">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="input2_M_imag"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="TopAdder_str"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecMemCore"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="RAM_1P_str"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str7"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str8"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str9"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="TopAdder_operator+<float>"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="82" class="1004" name="output_M_real_addr_gep_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="32" slack="0"/>
<pin id="84" dir="0" index="1" bw="1" slack="0"/>
<pin id="85" dir="0" index="2" bw="2" slack="0"/>
<pin id="86" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="output_M_real_addr/10 "/>
</bind>
</comp>

<comp id="89" class="1004" name="output_M_imag_addr_gep_fu_89">
<pin_list>
<pin id="90" dir="0" index="0" bw="32" slack="0"/>
<pin id="91" dir="0" index="1" bw="1" slack="0"/>
<pin id="92" dir="0" index="2" bw="2" slack="0"/>
<pin id="93" dir="1" index="3" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="output_M_imag_addr/10 "/>
</bind>
</comp>

<comp id="96" class="1004" name="grp_access_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="2" slack="0"/>
<pin id="98" dir="0" index="1" bw="32" slack="1"/>
<pin id="99" dir="1" index="2" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_78/10 stg_89/17 stg_100/24 stg_111/31 stg_126/38 "/>
</bind>
</comp>

<comp id="101" class="1004" name="grp_access_fu_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="2" slack="0"/>
<pin id="103" dir="0" index="1" bw="32" slack="1"/>
<pin id="104" dir="1" index="2" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_79/10 stg_90/17 stg_101/24 stg_112/31 stg_127/38 "/>
</bind>
</comp>

<comp id="106" class="1005" name="index_reg_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="2" slack="1"/>
<pin id="108" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="index (phireg) "/>
</bind>
</comp>

<comp id="110" class="1004" name="index_phi_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="1" slack="1"/>
<pin id="112" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="113" dir="0" index="2" bw="2" slack="0"/>
<pin id="114" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="115" dir="1" index="4" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="index/2 "/>
</bind>
</comp>

<comp id="118" class="1004" name="grp_TopAdder_addoperator_float_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="64" slack="0"/>
<pin id="120" dir="0" index="1" bw="32" slack="0"/>
<pin id="121" dir="0" index="2" bw="2" slack="1"/>
<pin id="122" dir="0" index="3" bw="4" slack="0"/>
<pin id="123" dir="0" index="4" bw="32" slack="0"/>
<pin id="124" dir="0" index="5" bw="2" slack="1"/>
<pin id="125" dir="0" index="6" bw="4" slack="0"/>
<pin id="126" dir="0" index="7" bw="32" slack="0"/>
<pin id="127" dir="0" index="8" bw="2" slack="1"/>
<pin id="128" dir="0" index="9" bw="32" slack="0"/>
<pin id="129" dir="0" index="10" bw="2" slack="1"/>
<pin id="130" dir="1" index="11" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="tmp_s/3 tmp_2/10 tmp_3/17 tmp_5/24 tmp_4/31 "/>
</bind>
</comp>

<comp id="150" class="1004" name="grp_fu_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="64" slack="0"/>
<pin id="152" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="p_0/9 p_0_0_1/16 p_0_0_2/23 p_0_0_3/30 p_0_0_4/37 "/>
</bind>
</comp>

<comp id="154" class="1004" name="grp_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="64" slack="0"/>
<pin id="156" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="p_1/9 p_1_0_1/16 p_1_0_2/23 p_1_0_3/30 p_1_0_4/37 "/>
</bind>
</comp>

<comp id="158" class="1005" name="reg_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="32" slack="1"/>
<pin id="160" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="p_0 p_0_0_1 p_0_0_2 p_0_0_3 p_0_0_4 "/>
</bind>
</comp>

<comp id="163" class="1005" name="reg_163">
<pin_list>
<pin id="164" dir="0" index="0" bw="32" slack="1"/>
<pin id="165" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="p_1 p_1_0_1 p_1_0_2 p_1_0_3 p_1_0_4 "/>
</bind>
</comp>

<comp id="168" class="1004" name="exitcond1_fu_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="2" slack="0"/>
<pin id="170" dir="0" index="1" bw="1" slack="0"/>
<pin id="171" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond1/2 "/>
</bind>
</comp>

<comp id="174" class="1004" name="index_1_fu_174">
<pin_list>
<pin id="175" dir="0" index="0" bw="2" slack="0"/>
<pin id="176" dir="0" index="1" bw="1" slack="0"/>
<pin id="177" dir="1" index="2" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="index_1/2 "/>
</bind>
</comp>

<comp id="180" class="1004" name="tmp_fu_180">
<pin_list>
<pin id="181" dir="0" index="0" bw="2" slack="8"/>
<pin id="182" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp/10 "/>
</bind>
</comp>

<comp id="186" class="1005" name="exitcond1_reg_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="1" slack="1"/>
<pin id="188" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond1 "/>
</bind>
</comp>

<comp id="190" class="1005" name="index_1_reg_190">
<pin_list>
<pin id="191" dir="0" index="0" bw="2" slack="0"/>
<pin id="192" dir="1" index="1" bw="2" slack="0"/>
</pin_list>
<bind>
<opset="index_1 "/>
</bind>
</comp>

<comp id="195" class="1005" name="output_M_real_addr_reg_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="2" slack="7"/>
<pin id="197" dir="1" index="1" bw="2" slack="7"/>
</pin_list>
<bind>
<opset="output_M_real_addr "/>
</bind>
</comp>

<comp id="200" class="1005" name="output_M_imag_addr_reg_200">
<pin_list>
<pin id="201" dir="0" index="0" bw="2" slack="7"/>
<pin id="202" dir="1" index="1" bw="2" slack="7"/>
</pin_list>
<bind>
<opset="output_M_imag_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="87"><net_src comp="0" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="88"><net_src comp="56" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="94"><net_src comp="2" pin="0"/><net_sink comp="89" pin=0"/></net>

<net id="95"><net_src comp="56" pin="0"/><net_sink comp="89" pin=1"/></net>

<net id="100"><net_src comp="82" pin="3"/><net_sink comp="96" pin=0"/></net>

<net id="105"><net_src comp="89" pin="3"/><net_sink comp="101" pin=0"/></net>

<net id="109"><net_src comp="46" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="116"><net_src comp="106" pin="1"/><net_sink comp="110" pin=0"/></net>

<net id="117"><net_src comp="110" pin="4"/><net_sink comp="106" pin=0"/></net>

<net id="131"><net_src comp="52" pin="0"/><net_sink comp="118" pin=0"/></net>

<net id="132"><net_src comp="4" pin="0"/><net_sink comp="118" pin=1"/></net>

<net id="133"><net_src comp="106" pin="1"/><net_sink comp="118" pin=2"/></net>

<net id="134"><net_src comp="54" pin="0"/><net_sink comp="118" pin=3"/></net>

<net id="135"><net_src comp="6" pin="0"/><net_sink comp="118" pin=4"/></net>

<net id="136"><net_src comp="106" pin="1"/><net_sink comp="118" pin=5"/></net>

<net id="137"><net_src comp="54" pin="0"/><net_sink comp="118" pin=6"/></net>

<net id="138"><net_src comp="8" pin="0"/><net_sink comp="118" pin=7"/></net>

<net id="139"><net_src comp="106" pin="1"/><net_sink comp="118" pin=8"/></net>

<net id="140"><net_src comp="10" pin="0"/><net_sink comp="118" pin=9"/></net>

<net id="141"><net_src comp="106" pin="1"/><net_sink comp="118" pin=10"/></net>

<net id="142"><net_src comp="58" pin="0"/><net_sink comp="118" pin=3"/></net>

<net id="143"><net_src comp="58" pin="0"/><net_sink comp="118" pin=6"/></net>

<net id="144"><net_src comp="60" pin="0"/><net_sink comp="118" pin=3"/></net>

<net id="145"><net_src comp="60" pin="0"/><net_sink comp="118" pin=6"/></net>

<net id="146"><net_src comp="62" pin="0"/><net_sink comp="118" pin=3"/></net>

<net id="147"><net_src comp="62" pin="0"/><net_sink comp="118" pin=6"/></net>

<net id="148"><net_src comp="64" pin="0"/><net_sink comp="118" pin=3"/></net>

<net id="149"><net_src comp="64" pin="0"/><net_sink comp="118" pin=6"/></net>

<net id="153"><net_src comp="118" pin="11"/><net_sink comp="150" pin=0"/></net>

<net id="157"><net_src comp="118" pin="11"/><net_sink comp="154" pin=0"/></net>

<net id="161"><net_src comp="150" pin="1"/><net_sink comp="158" pin=0"/></net>

<net id="162"><net_src comp="158" pin="1"/><net_sink comp="96" pin=1"/></net>

<net id="166"><net_src comp="154" pin="1"/><net_sink comp="163" pin=0"/></net>

<net id="167"><net_src comp="163" pin="1"/><net_sink comp="101" pin=1"/></net>

<net id="172"><net_src comp="110" pin="4"/><net_sink comp="168" pin=0"/></net>

<net id="173"><net_src comp="48" pin="0"/><net_sink comp="168" pin=1"/></net>

<net id="178"><net_src comp="110" pin="4"/><net_sink comp="174" pin=0"/></net>

<net id="179"><net_src comp="50" pin="0"/><net_sink comp="174" pin=1"/></net>

<net id="183"><net_src comp="106" pin="1"/><net_sink comp="180" pin=0"/></net>

<net id="184"><net_src comp="180" pin="1"/><net_sink comp="82" pin=2"/></net>

<net id="185"><net_src comp="180" pin="1"/><net_sink comp="89" pin=2"/></net>

<net id="189"><net_src comp="168" pin="2"/><net_sink comp="186" pin=0"/></net>

<net id="193"><net_src comp="174" pin="2"/><net_sink comp="190" pin=0"/></net>

<net id="194"><net_src comp="190" pin="1"/><net_sink comp="110" pin=2"/></net>

<net id="198"><net_src comp="82" pin="3"/><net_sink comp="195" pin=0"/></net>

<net id="199"><net_src comp="195" pin="1"/><net_sink comp="96" pin=0"/></net>

<net id="203"><net_src comp="89" pin="3"/><net_sink comp="200" pin=0"/></net>

<net id="204"><net_src comp="200" pin="1"/><net_sink comp="101" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
		exitcond1 : 1
		index_1 : 1
		stg_65 : 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		p_0 : 1
		p_1 : 1
	State 10
		output_M_real_addr : 1
		output_M_imag_addr : 1
		stg_78 : 2
		stg_79 : 2
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
		p_0_0_1 : 1
		p_1_0_1 : 1
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
		p_0_0_2 : 1
		p_1_0_2 : 1
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
		p_0_0_3 : 1
		p_1_0_3 : 1
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
		p_0_0_4 : 1
		p_1_0_4 : 1
	State 38
		empty_14 : 1
	State 39


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------------------|---------|---------|---------|---------|
| Operation|            Functional Unit            |  DSP48E |  Delay  |    FF   |   LUT   |
|----------|---------------------------------------|---------|---------|---------|---------|
|   call   | grp_TopAdder_addoperator_float_fu_118 |    4    |  6.284  |   550   |   802   |
|----------|---------------------------------------|---------|---------|---------|---------|
|    add   |             index_1_fu_174            |    0    |    0    |    0    |    2    |
|----------|---------------------------------------|---------|---------|---------|---------|
|   icmp   |            exitcond1_fu_168           |    0    |    0    |    0    |    1    |
|----------|---------------------------------------|---------|---------|---------|---------|
|extractvalue|               grp_fu_150              |    0    |    0    |    0    |    0    |
|          |               grp_fu_154              |    0    |    0    |    0    |    0    |
|----------|---------------------------------------|---------|---------|---------|---------|
|   zext   |               tmp_fu_180              |    0    |    0    |    0    |    0    |
|----------|---------------------------------------|---------|---------|---------|---------|
|   Total  |                                       |    4    |  6.284  |   550   |   805   |
|----------|---------------------------------------|---------|---------|---------|---------|

Memories:
N/A

* Register list:
+--------------------------+--------+
|                          |   FF   |
+--------------------------+--------+
|     exitcond1_reg_186    |    1   |
|      index_1_reg_190     |    2   |
|       index_reg_106      |    2   |
|output_M_imag_addr_reg_200|    2   |
|output_M_real_addr_reg_195|    2   |
|          reg_158         |   32   |
|          reg_163         |   32   |
+--------------------------+--------+
|           Total          |   73   |
+--------------------------+--------+

* Multiplexer (MUX) list: 
|---------------------------------------|------|------|------|--------||---------||---------|
|                  Comp                 |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------------------------|------|------|------|--------||---------||---------|
|            grp_access_fu_96           |  p0  |   2  |   2  |    4   ||    2    |
|           grp_access_fu_101           |  p0  |   2  |   2  |    4   ||    2    |
|             index_reg_106             |  p0  |   2  |   2  |    4   ||    2    |
| grp_TopAdder_addoperator_float_fu_118 |  p3  |   5  |   4  |   20   ||    4    |
| grp_TopAdder_addoperator_float_fu_118 |  p6  |   5  |   4  |   20   ||    4    |
|---------------------------------------|------|------|------|--------||---------||---------|
|                 Total                 |      |      |      |   52   ||  8.591  ||    14   |
|---------------------------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    4   |    6   |   550  |   805  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    8   |    -   |   14   |
|  Register |    -   |    -   |   73   |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    4   |   14   |   623  |   819  |
+-----------+--------+--------+--------+--------+
