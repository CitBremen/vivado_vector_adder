

================================================================
== Vivado HLS Report for 'TopAdder'
================================================================
* Date:           Fri May 20 13:00:28 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        complexAdder
* Solution:       unoptimized
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.23|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  127|  127|  128|  128|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |  126|  126|        42|          -|          -|     3|    no    |
        | + Loop 1.1  |   40|   40|         8|          -|          -|     5|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	2  / (exitcond)
	4  / (!exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_11 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([3 x double]* %output_M_real), !map !7

ST_1: stg_12 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([3 x double]* %output_M_imag), !map !13

ST_1: stg_13 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([15 x double]* %input1_M_real), !map !17

ST_1: stg_14 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([15 x double]* %input1_M_imag), !map !23

ST_1: stg_15 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([3 x double]* %input2_M_real), !map !27

ST_1: stg_16 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([3 x double]* %input2_M_imag), !map !31

ST_1: stg_17 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !35

ST_1: stg_18 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @TopAdder_str) nounwind

ST_1: stg_19 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: empty [1/1] 0.00ns
:9  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([3 x double]* %output_M_real, [1 x i8]* @p_str3, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str3, i32 -1, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3)

ST_1: empty_5 [1/1] 0.00ns
:10  %empty_5 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x double]* %output_M_imag, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4)

ST_1: stg_22 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface([3 x double]* %output_M_real, [3 x double]* %output_M_imag, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: empty_6 [1/1] 0.00ns
:12  %empty_6 = call i32 (...)* @_ssdm_op_SpecMemCore([15 x double]* %input1_M_real, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5)

ST_1: empty_7 [1/1] 0.00ns
:13  %empty_7 = call i32 (...)* @_ssdm_op_SpecMemCore([15 x double]* %input1_M_imag, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6)

ST_1: stg_25 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecInterface([15 x double]* %input1_M_real, [15 x double]* %input1_M_imag, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: empty_8 [1/1] 0.00ns
:15  %empty_8 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x double]* %input2_M_real, [1 x i8]* @p_str7, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str7, i32 -1, [1 x i8]* @p_str7, [1 x i8]* @p_str7, [1 x i8]* @p_str7)

ST_1: empty_9 [1/1] 0.00ns
:16  %empty_9 = call i32 (...)* @_ssdm_op_SpecMemCore([3 x double]* %input2_M_imag, [1 x i8]* @p_str8, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str8, i32 -1, [1 x i8]* @p_str8, [1 x i8]* @p_str8, [1 x i8]* @p_str8)

ST_1: stg_28 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecInterface([3 x double]* %input2_M_real, [3 x double]* %input2_M_imag, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_29 [1/1] 1.57ns
:18  br label %.loopexit


 <State 2>: 1.57ns
ST_2: index [1/1] 0.00ns
.loopexit:0  %index = phi i2 [ 0, %0 ], [ %index_1, %.preheader ]

ST_2: exitcond1 [1/1] 1.36ns
.loopexit:1  %exitcond1 = icmp eq i2 %index, -1

ST_2: empty_10 [1/1] 0.00ns
.loopexit:2  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_2: index_1 [1/1] 0.80ns
.loopexit:3  %index_1 = add i2 %index, 1

ST_2: stg_34 [1/1] 0.00ns
.loopexit:4  br i1 %exitcond1, label %2, label %.preheader.preheader

ST_2: tmp [1/1] 0.00ns
.preheader.preheader:0  %tmp = zext i2 %index to i64

ST_2: tmp_cast [1/1] 0.00ns
.preheader.preheader:1  %tmp_cast = zext i2 %index to i5

ST_2: tmp_1 [1/1] 0.00ns
.preheader.preheader:2  %tmp_1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %index, i2 0)

ST_2: p_shl_cast [1/1] 0.00ns
.preheader.preheader:3  %p_shl_cast = zext i4 %tmp_1 to i5

ST_2: tmp_2 [1/1] 0.80ns
.preheader.preheader:4  %tmp_2 = add i5 %tmp_cast, %p_shl_cast

ST_2: input2_M_real_addr [1/1] 0.00ns
.preheader.preheader:5  %input2_M_real_addr = getelementptr [3 x double]* %input2_M_real, i64 0, i64 %tmp

ST_2: input2_M_imag_addr [1/1] 0.00ns
.preheader.preheader:6  %input2_M_imag_addr = getelementptr [3 x double]* %input2_M_imag, i64 0, i64 %tmp

ST_2: output_M_real_addr [1/1] 0.00ns
.preheader.preheader:7  %output_M_real_addr = getelementptr [3 x double]* %output_M_real, i64 0, i64 %tmp

ST_2: output_M_imag_addr [1/1] 0.00ns
.preheader.preheader:8  %output_M_imag_addr = getelementptr [3 x double]* %output_M_imag, i64 0, i64 %tmp

ST_2: stg_44 [1/1] 1.57ns
.preheader.preheader:9  br label %.preheader

ST_2: stg_45 [1/1] 0.00ns
:0  ret i32 0


 <State 3>: 4.11ns
ST_3: depth [1/1] 0.00ns
.preheader:0  %depth = phi i3 [ %depth_1, %1 ], [ 0, %.preheader.preheader ]

ST_3: exitcond [1/1] 1.62ns
.preheader:1  %exitcond = icmp eq i3 %depth, -3

ST_3: empty_11 [1/1] 0.00ns
.preheader:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_3: depth_1 [1/1] 0.80ns
.preheader:3  %depth_1 = add i3 %depth, 1

ST_3: stg_50 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %.loopexit, label %1

ST_3: tmp_3_cast [1/1] 0.00ns
:0  %tmp_3_cast = zext i3 %depth to i5

ST_3: tmp_4 [1/1] 1.72ns
:1  %tmp_4 = add i5 %tmp_2, %tmp_3_cast

ST_3: tmp_4_cast [1/1] 0.00ns
:2  %tmp_4_cast = zext i5 %tmp_4 to i64

ST_3: input1_M_real_addr [1/1] 0.00ns
:3  %input1_M_real_addr = getelementptr [15 x double]* %input1_M_real, i64 0, i64 %tmp_4_cast

ST_3: input1_M_imag_addr [1/1] 0.00ns
:4  %input1_M_imag_addr = getelementptr [15 x double]* %input1_M_imag, i64 0, i64 %tmp_4_cast

ST_3: input1_M_real_load [2/2] 2.39ns
:5  %input1_M_real_load = load double* %input1_M_real_addr, align 8

ST_3: input1_M_imag_load [2/2] 2.39ns
:6  %input1_M_imag_load = load double* %input1_M_imag_addr, align 8

ST_3: input2_M_real_load [2/2] 2.39ns
:7  %input2_M_real_load = load double* %input2_M_real_addr, align 8

ST_3: input2_M_imag_load [2/2] 2.39ns
:8  %input2_M_imag_load = load double* %input2_M_imag_addr, align 8


 <State 4>: 2.39ns
ST_4: input1_M_real_load [1/2] 2.39ns
:5  %input1_M_real_load = load double* %input1_M_real_addr, align 8

ST_4: input1_M_imag_load [1/2] 2.39ns
:6  %input1_M_imag_load = load double* %input1_M_imag_addr, align 8

ST_4: input2_M_real_load [1/2] 2.39ns
:7  %input2_M_real_load = load double* %input2_M_real_addr, align 8

ST_4: input2_M_imag_load [1/2] 2.39ns
:8  %input2_M_imag_load = load double* %input2_M_imag_addr, align 8


 <State 5>: 8.23ns
ST_5: p_r_M_real [5/5] 8.23ns
:9  %p_r_M_real = fadd double %input1_M_real_load, %input2_M_real_load

ST_5: p_r_M_imag [5/5] 8.23ns
:10  %p_r_M_imag = fadd double %input1_M_imag_load, %input2_M_imag_load


 <State 6>: 8.23ns
ST_6: p_r_M_real [4/5] 8.23ns
:9  %p_r_M_real = fadd double %input1_M_real_load, %input2_M_real_load

ST_6: p_r_M_imag [4/5] 8.23ns
:10  %p_r_M_imag = fadd double %input1_M_imag_load, %input2_M_imag_load


 <State 7>: 8.23ns
ST_7: p_r_M_real [3/5] 8.23ns
:9  %p_r_M_real = fadd double %input1_M_real_load, %input2_M_real_load

ST_7: p_r_M_imag [3/5] 8.23ns
:10  %p_r_M_imag = fadd double %input1_M_imag_load, %input2_M_imag_load


 <State 8>: 8.23ns
ST_8: p_r_M_real [2/5] 8.23ns
:9  %p_r_M_real = fadd double %input1_M_real_load, %input2_M_real_load

ST_8: p_r_M_imag [2/5] 8.23ns
:10  %p_r_M_imag = fadd double %input1_M_imag_load, %input2_M_imag_load


 <State 9>: 8.23ns
ST_9: p_r_M_real [1/5] 8.23ns
:9  %p_r_M_real = fadd double %input1_M_real_load, %input2_M_real_load

ST_9: p_r_M_imag [1/5] 8.23ns
:10  %p_r_M_imag = fadd double %input1_M_imag_load, %input2_M_imag_load


 <State 10>: 2.39ns
ST_10: stg_74 [1/1] 2.39ns
:11  store double %p_r_M_real, double* %output_M_real_addr, align 8

ST_10: stg_75 [1/1] 2.39ns
:12  store double %p_r_M_imag, double* %output_M_imag_addr, align 8

ST_10: stg_76 [1/1] 0.00ns
:13  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
