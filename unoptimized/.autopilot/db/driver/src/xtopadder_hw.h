// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ==============================================================

// AXILiteS
// 0x000 : Control signals
//         bit 0  - ap_start (Read/Write/COH)
//         bit 1  - ap_done (Read/COR)
//         bit 2  - ap_idle (Read)
//         bit 3  - ap_ready (Read)
//         bit 7  - auto_restart (Read/Write)
//         others - reserved
// 0x004 : Global Interrupt Enable Register
//         bit 0  - Global Interrupt Enable (Read/Write)
//         others - reserved
// 0x008 : IP Interrupt Enable Register (Read/Write)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x00c : IP Interrupt Status Register (Read/TOW)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x010 : Data signal of ap_return
//         bit 31~0 - ap_return[31:0] (Read)
// 0x020 ~
// 0x03f : Memory 'output_M_real' (3 * 64b)
//         Word 2n   : bit [31:0] - output_M_real[n][31: 0]
//         Word 2n+1 : bit [31:0] - output_M_real[n][63:32]
// 0x040 ~
// 0x05f : Memory 'output_M_imag' (3 * 64b)
//         Word 2n   : bit [31:0] - output_M_imag[n][31: 0]
//         Word 2n+1 : bit [31:0] - output_M_imag[n][63:32]
// 0x080 ~
// 0x0ff : Memory 'input1_M_real' (15 * 64b)
//         Word 2n   : bit [31:0] - input1_M_real[n][31: 0]
//         Word 2n+1 : bit [31:0] - input1_M_real[n][63:32]
// 0x100 ~
// 0x17f : Memory 'input1_M_imag' (15 * 64b)
//         Word 2n   : bit [31:0] - input1_M_imag[n][31: 0]
//         Word 2n+1 : bit [31:0] - input1_M_imag[n][63:32]
// 0x180 ~
// 0x19f : Memory 'input2_M_real' (3 * 64b)
//         Word 2n   : bit [31:0] - input2_M_real[n][31: 0]
//         Word 2n+1 : bit [31:0] - input2_M_real[n][63:32]
// 0x1a0 ~
// 0x1bf : Memory 'input2_M_imag' (3 * 64b)
//         Word 2n   : bit [31:0] - input2_M_imag[n][31: 0]
//         Word 2n+1 : bit [31:0] - input2_M_imag[n][63:32]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XTOPADDER_AXILITES_ADDR_AP_CTRL            0x000
#define XTOPADDER_AXILITES_ADDR_GIE                0x004
#define XTOPADDER_AXILITES_ADDR_IER                0x008
#define XTOPADDER_AXILITES_ADDR_ISR                0x00c
#define XTOPADDER_AXILITES_ADDR_AP_RETURN          0x010
#define XTOPADDER_AXILITES_BITS_AP_RETURN          32
#define XTOPADDER_AXILITES_ADDR_OUTPUT_M_REAL_BASE 0x020
#define XTOPADDER_AXILITES_ADDR_OUTPUT_M_REAL_HIGH 0x03f
#define XTOPADDER_AXILITES_WIDTH_OUTPUT_M_REAL     64
#define XTOPADDER_AXILITES_DEPTH_OUTPUT_M_REAL     3
#define XTOPADDER_AXILITES_ADDR_OUTPUT_M_IMAG_BASE 0x040
#define XTOPADDER_AXILITES_ADDR_OUTPUT_M_IMAG_HIGH 0x05f
#define XTOPADDER_AXILITES_WIDTH_OUTPUT_M_IMAG     64
#define XTOPADDER_AXILITES_DEPTH_OUTPUT_M_IMAG     3
#define XTOPADDER_AXILITES_ADDR_INPUT1_M_REAL_BASE 0x080
#define XTOPADDER_AXILITES_ADDR_INPUT1_M_REAL_HIGH 0x0ff
#define XTOPADDER_AXILITES_WIDTH_INPUT1_M_REAL     64
#define XTOPADDER_AXILITES_DEPTH_INPUT1_M_REAL     15
#define XTOPADDER_AXILITES_ADDR_INPUT1_M_IMAG_BASE 0x100
#define XTOPADDER_AXILITES_ADDR_INPUT1_M_IMAG_HIGH 0x17f
#define XTOPADDER_AXILITES_WIDTH_INPUT1_M_IMAG     64
#define XTOPADDER_AXILITES_DEPTH_INPUT1_M_IMAG     15
#define XTOPADDER_AXILITES_ADDR_INPUT2_M_REAL_BASE 0x180
#define XTOPADDER_AXILITES_ADDR_INPUT2_M_REAL_HIGH 0x19f
#define XTOPADDER_AXILITES_WIDTH_INPUT2_M_REAL     64
#define XTOPADDER_AXILITES_DEPTH_INPUT2_M_REAL     3
#define XTOPADDER_AXILITES_ADDR_INPUT2_M_IMAG_BASE 0x1a0
#define XTOPADDER_AXILITES_ADDR_INPUT2_M_IMAG_HIGH 0x1bf
#define XTOPADDER_AXILITES_WIDTH_INPUT2_M_IMAG     64
#define XTOPADDER_AXILITES_DEPTH_INPUT2_M_IMAG     3

