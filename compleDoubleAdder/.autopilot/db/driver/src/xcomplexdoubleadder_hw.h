// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ==============================================================

// AXILiteS
// 0x000 : Control signals
//         bit 0  - ap_start (Read/Write/COH)
//         bit 1  - ap_done (Read/COR)
//         bit 2  - ap_idle (Read)
//         bit 3  - ap_ready (Read)
//         bit 7  - auto_restart (Read/Write)
//         others - reserved
// 0x004 : Global Interrupt Enable Register
//         bit 0  - Global Interrupt Enable (Read/Write)
//         others - reserved
// 0x008 : IP Interrupt Enable Register (Read/Write)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x00c : IP Interrupt Status Register (Read/TOW)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x010 : Data signal of ap_return
//         bit 31~0 - ap_return[31:0] (Read)
// 0x040 ~
// 0x07f : Memory 'in1_M_real' (7 * 64b)
//         Word 2n   : bit [31:0] - in1_M_real[n][31: 0]
//         Word 2n+1 : bit [31:0] - in1_M_real[n][63:32]
// 0x080 ~
// 0x0bf : Memory 'in1_M_imag' (7 * 64b)
//         Word 2n   : bit [31:0] - in1_M_imag[n][31: 0]
//         Word 2n+1 : bit [31:0] - in1_M_imag[n][63:32]
// 0x0c0 ~
// 0x0ff : Memory 'in2_M_real' (7 * 64b)
//         Word 2n   : bit [31:0] - in2_M_real[n][31: 0]
//         Word 2n+1 : bit [31:0] - in2_M_real[n][63:32]
// 0x100 ~
// 0x13f : Memory 'in2_M_imag' (7 * 64b)
//         Word 2n   : bit [31:0] - in2_M_imag[n][31: 0]
//         Word 2n+1 : bit [31:0] - in2_M_imag[n][63:32]
// 0x140 ~
// 0x17f : Memory 'out_M_real' (7 * 64b)
//         Word 2n   : bit [31:0] - out_M_real[n][31: 0]
//         Word 2n+1 : bit [31:0] - out_M_real[n][63:32]
// 0x180 ~
// 0x1bf : Memory 'out_M_imag' (7 * 64b)
//         Word 2n   : bit [31:0] - out_M_imag[n][31: 0]
//         Word 2n+1 : bit [31:0] - out_M_imag[n][63:32]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_AP_CTRL         0x000
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_GIE             0x004
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IER             0x008
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_ISR             0x00c
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_AP_RETURN       0x010
#define XCOMPLEXDOUBLEADDER_AXILITES_BITS_AP_RETURN       32
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN1_M_REAL_BASE 0x040
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN1_M_REAL_HIGH 0x07f
#define XCOMPLEXDOUBLEADDER_AXILITES_WIDTH_IN1_M_REAL     64
#define XCOMPLEXDOUBLEADDER_AXILITES_DEPTH_IN1_M_REAL     7
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN1_M_IMAG_BASE 0x080
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN1_M_IMAG_HIGH 0x0bf
#define XCOMPLEXDOUBLEADDER_AXILITES_WIDTH_IN1_M_IMAG     64
#define XCOMPLEXDOUBLEADDER_AXILITES_DEPTH_IN1_M_IMAG     7
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN2_M_REAL_BASE 0x0c0
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN2_M_REAL_HIGH 0x0ff
#define XCOMPLEXDOUBLEADDER_AXILITES_WIDTH_IN2_M_REAL     64
#define XCOMPLEXDOUBLEADDER_AXILITES_DEPTH_IN2_M_REAL     7
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN2_M_IMAG_BASE 0x100
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_IN2_M_IMAG_HIGH 0x13f
#define XCOMPLEXDOUBLEADDER_AXILITES_WIDTH_IN2_M_IMAG     64
#define XCOMPLEXDOUBLEADDER_AXILITES_DEPTH_IN2_M_IMAG     7
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_OUT_M_REAL_BASE 0x140
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_OUT_M_REAL_HIGH 0x17f
#define XCOMPLEXDOUBLEADDER_AXILITES_WIDTH_OUT_M_REAL     64
#define XCOMPLEXDOUBLEADDER_AXILITES_DEPTH_OUT_M_REAL     7
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_OUT_M_IMAG_BASE 0x180
#define XCOMPLEXDOUBLEADDER_AXILITES_ADDR_OUT_M_IMAG_HIGH 0x1bf
#define XCOMPLEXDOUBLEADDER_AXILITES_WIDTH_OUT_M_IMAG     64
#define XCOMPLEXDOUBLEADDER_AXILITES_DEPTH_OUT_M_IMAG     7

