// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "complex2DAdder.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic complex2DAdder::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic complex2DAdder::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> complex2DAdder::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> complex2DAdder::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<3> complex2DAdder::ap_ST_st4_fsm_2 = "100";
const sc_lv<32> complex2DAdder::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> complex2DAdder::ap_const_lv1_1 = "1";
const int complex2DAdder::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> complex2DAdder::ap_const_lv32_1 = "1";
const sc_lv<1> complex2DAdder::ap_const_lv1_0 = "0";
const sc_lv<3> complex2DAdder::ap_const_lv3_0 = "000";
const sc_lv<3> complex2DAdder::ap_const_lv3_5 = "101";
const sc_lv<3> complex2DAdder::ap_const_lv3_1 = "1";
const sc_lv<2> complex2DAdder::ap_const_lv2_0 = "00";
const sc_lv<5> complex2DAdder::ap_const_lv5_2 = "10";
const sc_lv<32> complex2DAdder::ap_const_lv32_2 = "10";

complex2DAdder::complex2DAdder(sc_module_name name) : sc_module(name), mVcdFile(0) {
    complex2DAdder_AXILiteS_s_axi_U = new complex2DAdder_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("complex2DAdder_AXILiteS_s_axi_U");
    complex2DAdder_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    complex2DAdder_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    complex2DAdder_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    complex2DAdder_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    complex2DAdder_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    complex2DAdder_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    complex2DAdder_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    complex2DAdder_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    complex2DAdder_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    complex2DAdder_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    complex2DAdder_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    complex2DAdder_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    complex2DAdder_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    complex2DAdder_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    complex2DAdder_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    complex2DAdder_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    complex2DAdder_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    complex2DAdder_AXILiteS_s_axi_U->ACLK(ap_clk);
    complex2DAdder_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    complex2DAdder_AXILiteS_s_axi_U->ACLK_EN(complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce);
    complex2DAdder_AXILiteS_s_axi_U->ap_start(ap_start);
    complex2DAdder_AXILiteS_s_axi_U->interrupt(interrupt);
    complex2DAdder_AXILiteS_s_axi_U->ap_ready(ap_ready);
    complex2DAdder_AXILiteS_s_axi_U->ap_done(ap_done);
    complex2DAdder_AXILiteS_s_axi_U->ap_idle(ap_idle);
    complex2DAdder_AXILiteS_s_axi_U->ap_return(ap_return);
    complex2DAdder_AXILiteS_s_axi_U->in1_M_real_V_address0(in1_M_real_V_address0);
    complex2DAdder_AXILiteS_s_axi_U->in1_M_real_V_ce0(in1_M_real_V_ce0);
    complex2DAdder_AXILiteS_s_axi_U->in1_M_real_V_q0(in1_M_real_V_q0);
    complex2DAdder_AXILiteS_s_axi_U->in1_M_imag_V_address0(in1_M_imag_V_address0);
    complex2DAdder_AXILiteS_s_axi_U->in1_M_imag_V_ce0(in1_M_imag_V_ce0);
    complex2DAdder_AXILiteS_s_axi_U->in1_M_imag_V_q0(in1_M_imag_V_q0);
    complex2DAdder_AXILiteS_s_axi_U->in2_M_real_V_address0(in2_M_real_V_address0);
    complex2DAdder_AXILiteS_s_axi_U->in2_M_real_V_ce0(in2_M_real_V_ce0);
    complex2DAdder_AXILiteS_s_axi_U->in2_M_real_V_q0(in2_M_real_V_q0);
    complex2DAdder_AXILiteS_s_axi_U->in2_M_imag_V_address0(in2_M_imag_V_address0);
    complex2DAdder_AXILiteS_s_axi_U->in2_M_imag_V_ce0(in2_M_imag_V_ce0);
    complex2DAdder_AXILiteS_s_axi_U->in2_M_imag_V_q0(in2_M_imag_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_147);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_sig_bdd_202);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_100 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_2);
    sensitive << ( ap_sig_bdd_202 );

    SC_METHOD(thread_ap_sig_ioackin_out_M_imag_V_TREADY);
    sensitive << ( out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ioackin_out_M_imag_V_TREADY );

    SC_METHOD(thread_ap_sig_ioackin_out_M_real_V_TREADY);
    sensitive << ( out_M_real_V_TREADY );
    sensitive << ( ap_reg_ioackin_out_M_real_V_TREADY );

    SC_METHOD(thread_complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_exitcond1_fu_141_p2);
    sensitive << ( index_reg_130 );
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_out_M_real_V_TREADY );
    sensitive << ( ap_sig_ioackin_out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_in1_M_imag_V_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_fu_153_p1 );

    SC_METHOD(thread_in1_M_imag_V_ce0);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_out_M_real_V_TREADY );
    sensitive << ( ap_sig_ioackin_out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_in1_M_real_V_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_fu_153_p1 );

    SC_METHOD(thread_in1_M_real_V_ce0);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_out_M_real_V_TREADY );
    sensitive << ( ap_sig_ioackin_out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_in2_M_imag_V_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_4_cast_fu_183_p1 );

    SC_METHOD(thread_in2_M_imag_V_ce0);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_out_M_real_V_TREADY );
    sensitive << ( ap_sig_ioackin_out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_in2_M_real_V_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_4_cast_fu_183_p1 );

    SC_METHOD(thread_in2_M_real_V_ce0);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_out_M_real_V_TREADY );
    sensitive << ( ap_sig_ioackin_out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_index_1_fu_147_p2);
    sensitive << ( index_reg_130 );

    SC_METHOD(thread_out_M_imag_V_TDATA);
    sensitive << ( in1_M_imag_V_q0 );
    sensitive << ( in2_M_imag_V_q0 );
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_out_M_imag_V_TVALID);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ioackin_out_M_imag_V_TREADY );

    SC_METHOD(thread_out_M_real_V_TDATA);
    sensitive << ( in1_M_real_V_q0 );
    sensitive << ( in2_M_real_V_q0 );
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_out_M_real_V_TVALID);
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ioackin_out_M_real_V_TREADY );

    SC_METHOD(thread_tmp_2_fu_163_p3);
    sensitive << ( index_reg_130 );

    SC_METHOD(thread_tmp_3_fu_171_p2);
    sensitive << ( tmp_2_fu_163_p3 );
    sensitive << ( tmp_cast_fu_159_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_183_p1);
    sensitive << ( tmp_4_fu_177_p2 );

    SC_METHOD(thread_tmp_4_fu_177_p2);
    sensitive << ( tmp_3_fu_171_p2 );

    SC_METHOD(thread_tmp_cast_fu_159_p1);
    sensitive << ( index_reg_130 );

    SC_METHOD(thread_tmp_fu_153_p1);
    sensitive << ( index_reg_130 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_141_p2 );
    sensitive << ( exitcond1_reg_203 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_ioackin_out_M_real_V_TREADY );
    sensitive << ( ap_sig_ioackin_out_M_imag_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ioackin_out_M_real_V_TREADY = SC_LOGIC_0;
    ap_reg_ioackin_out_M_imag_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "complex2DAdder_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, out_M_real_V_TDATA, "(port)out_M_real_V_TDATA");
    sc_trace(mVcdFile, out_M_real_V_TVALID, "(port)out_M_real_V_TVALID");
    sc_trace(mVcdFile, out_M_real_V_TREADY, "(port)out_M_real_V_TREADY");
    sc_trace(mVcdFile, out_M_imag_V_TDATA, "(port)out_M_imag_V_TDATA");
    sc_trace(mVcdFile, out_M_imag_V_TVALID, "(port)out_M_imag_V_TVALID");
    sc_trace(mVcdFile, out_M_imag_V_TREADY, "(port)out_M_imag_V_TREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_21, "ap_sig_bdd_21");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in1_M_real_V_address0, "in1_M_real_V_address0");
    sc_trace(mVcdFile, in1_M_real_V_ce0, "in1_M_real_V_ce0");
    sc_trace(mVcdFile, in1_M_real_V_q0, "in1_M_real_V_q0");
    sc_trace(mVcdFile, in1_M_imag_V_address0, "in1_M_imag_V_address0");
    sc_trace(mVcdFile, in1_M_imag_V_ce0, "in1_M_imag_V_ce0");
    sc_trace(mVcdFile, in1_M_imag_V_q0, "in1_M_imag_V_q0");
    sc_trace(mVcdFile, in2_M_real_V_address0, "in2_M_real_V_address0");
    sc_trace(mVcdFile, in2_M_real_V_ce0, "in2_M_real_V_ce0");
    sc_trace(mVcdFile, in2_M_real_V_q0, "in2_M_real_V_q0");
    sc_trace(mVcdFile, in2_M_imag_V_address0, "in2_M_imag_V_address0");
    sc_trace(mVcdFile, in2_M_imag_V_ce0, "in2_M_imag_V_ce0");
    sc_trace(mVcdFile, in2_M_imag_V_q0, "in2_M_imag_V_q0");
    sc_trace(mVcdFile, ap_return, "ap_return");
    sc_trace(mVcdFile, complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce, "complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, index_reg_130, "index_reg_130");
    sc_trace(mVcdFile, exitcond1_fu_141_p2, "exitcond1_fu_141_p2");
    sc_trace(mVcdFile, exitcond1_reg_203, "exitcond1_reg_203");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_100, "ap_sig_bdd_100");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_ioackin_out_M_real_V_TREADY, "ap_sig_ioackin_out_M_real_V_TREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_out_M_imag_V_TREADY, "ap_sig_ioackin_out_M_imag_V_TREADY");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, index_1_fu_147_p2, "index_1_fu_147_p2");
    sc_trace(mVcdFile, tmp_4_cast_fu_183_p1, "tmp_4_cast_fu_183_p1");
    sc_trace(mVcdFile, tmp_fu_153_p1, "tmp_fu_153_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_out_M_real_V_TREADY, "ap_reg_ioackin_out_M_real_V_TREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_out_M_imag_V_TREADY, "ap_reg_ioackin_out_M_imag_V_TREADY");
    sc_trace(mVcdFile, tmp_2_fu_163_p3, "tmp_2_fu_163_p3");
    sc_trace(mVcdFile, tmp_cast_fu_159_p1, "tmp_cast_fu_159_p1");
    sc_trace(mVcdFile, tmp_3_fu_171_p2, "tmp_3_fu_171_p2");
    sc_trace(mVcdFile, tmp_4_fu_177_p2, "tmp_4_fu_177_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_2, "ap_sig_cseq_ST_st4_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_202, "ap_sig_bdd_202");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_147, "ap_sig_bdd_147");
#endif

    }
    mHdltvinHandle.open("complex2DAdder.hdltvin.dat");
    mHdltvoutHandle.open("complex2DAdder.hdltvout.dat");
}

complex2DAdder::~complex2DAdder() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete complex2DAdder_AXILiteS_s_axi_U;
}

void complex2DAdder::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_out_M_imag_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_147.read()) {
            if (!(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_reg_ioackin_out_M_imag_V_TREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, out_M_imag_V_TREADY.read())) {
                ap_reg_ioackin_out_M_imag_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_out_M_real_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_147.read()) {
            if (!(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_reg_ioackin_out_M_real_V_TREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, out_M_real_V_TREADY.read())) {
                ap_reg_ioackin_out_M_real_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             !esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                     !esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
         esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
        index_reg_130 = index_1_fu_147_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        index_reg_130 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        exitcond1_reg_203 = exitcond1_fu_141_p2.read();
    }
}

void complex2DAdder::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void complex2DAdder::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void complex2DAdder::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void complex2DAdder::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void complex2DAdder::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void complex2DAdder::thread_ap_sig_bdd_100() {
    ap_sig_bdd_100 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void complex2DAdder::thread_ap_sig_bdd_147() {
    ap_sig_bdd_147 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()));
}

void complex2DAdder::thread_ap_sig_bdd_202() {
    ap_sig_bdd_202 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void complex2DAdder::thread_ap_sig_bdd_21() {
    ap_sig_bdd_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void complex2DAdder::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_100.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_ap_sig_cseq_ST_st4_fsm_2() {
    if (ap_sig_bdd_202.read()) {
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_ap_sig_ioackin_out_M_imag_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_M_imag_V_TREADY.read())) {
        ap_sig_ioackin_out_M_imag_V_TREADY = out_M_imag_V_TREADY.read();
    } else {
        ap_sig_ioackin_out_M_imag_V_TREADY = ap_const_logic_1;
    }
}

void complex2DAdder::thread_ap_sig_ioackin_out_M_real_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_M_real_V_TREADY.read())) {
        ap_sig_ioackin_out_M_real_V_TREADY = out_M_real_V_TREADY.read();
    } else {
        ap_sig_ioackin_out_M_real_V_TREADY = ap_const_logic_1;
    }
}

void complex2DAdder::thread_complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce() {
    complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void complex2DAdder::thread_exitcond1_fu_141_p2() {
    exitcond1_fu_141_p2 = (!index_reg_130.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(index_reg_130.read() == ap_const_lv3_5);
}

void complex2DAdder::thread_in1_M_imag_V_address0() {
    in1_M_imag_V_address0 =  (sc_lv<3>) (tmp_fu_153_p1.read());
}

void complex2DAdder::thread_in1_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        in1_M_imag_V_ce0 = ap_const_logic_1;
    } else {
        in1_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_in1_M_real_V_address0() {
    in1_M_real_V_address0 =  (sc_lv<3>) (tmp_fu_153_p1.read());
}

void complex2DAdder::thread_in1_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        in1_M_real_V_ce0 = ap_const_logic_1;
    } else {
        in1_M_real_V_ce0 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_in2_M_imag_V_address0() {
    in2_M_imag_V_address0 =  (sc_lv<4>) (tmp_4_cast_fu_183_p1.read());
}

void complex2DAdder::thread_in2_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        in2_M_imag_V_ce0 = ap_const_logic_1;
    } else {
        in2_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_in2_M_real_V_address0() {
    in2_M_real_V_address0 =  (sc_lv<4>) (tmp_4_cast_fu_183_p1.read());
}

void complex2DAdder::thread_in2_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        in2_M_real_V_ce0 = ap_const_logic_1;
    } else {
        in2_M_real_V_ce0 = ap_const_logic_0;
    }
}

void complex2DAdder::thread_index_1_fu_147_p2() {
    index_1_fu_147_p2 = (!index_reg_130.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(index_reg_130.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void complex2DAdder::thread_out_M_imag_V_TDATA() {
    out_M_imag_V_TDATA = (!in1_M_imag_V_q0.read().is_01() || !in2_M_imag_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(in1_M_imag_V_q0.read()) + sc_biguint<32>(in2_M_imag_V_q0.read()));
}

void complex2DAdder::thread_out_M_imag_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_M_imag_V_TREADY.read()))) {
        out_M_imag_V_TVALID = ap_const_logic_1;
    } else {
        out_M_imag_V_TVALID = ap_const_logic_0;
    }
}

void complex2DAdder::thread_out_M_real_V_TDATA() {
    out_M_real_V_TDATA = (!in1_M_real_V_q0.read().is_01() || !in2_M_real_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(in1_M_real_V_q0.read()) + sc_biguint<32>(in2_M_real_V_q0.read()));
}

void complex2DAdder::thread_out_M_real_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_out_M_real_V_TREADY.read()))) {
        out_M_real_V_TVALID = ap_const_logic_1;
    } else {
        out_M_real_V_TVALID = ap_const_logic_0;
    }
}

void complex2DAdder::thread_tmp_2_fu_163_p3() {
    tmp_2_fu_163_p3 = esl_concat<3,2>(index_reg_130.read(), ap_const_lv2_0);
}

void complex2DAdder::thread_tmp_3_fu_171_p2() {
    tmp_3_fu_171_p2 = (!tmp_2_fu_163_p3.read().is_01() || !tmp_cast_fu_159_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_fu_163_p3.read()) - sc_biguint<5>(tmp_cast_fu_159_p1.read()));
}

void complex2DAdder::thread_tmp_4_cast_fu_183_p1() {
    tmp_4_cast_fu_183_p1 = esl_sext<64,5>(tmp_4_fu_177_p2.read());
}

void complex2DAdder::thread_tmp_4_fu_177_p2() {
    tmp_4_fu_177_p2 = (!tmp_3_fu_171_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_fu_171_p2.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void complex2DAdder::thread_tmp_cast_fu_159_p1() {
    tmp_cast_fu_159_p1 = esl_zext<5,3>(index_reg_130.read());
}

void complex2DAdder::thread_tmp_fu_153_p1() {
    tmp_fu_153_p1 = esl_zext<64,3>(index_reg_130.read());
}

void complex2DAdder::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(((esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_real_V_TREADY.read())) || 
  (esl_seteq<1,1,1>(exitcond1_reg_203.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_out_M_imag_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond1_fu_141_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st4_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void complex2DAdder::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"out_M_real_V_TDATA\" :  \"" << out_M_real_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_M_real_V_TVALID\" :  \"" << out_M_real_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_M_real_V_TREADY\" :  \"" << out_M_real_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_M_imag_V_TDATA\" :  \"" << out_M_imag_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_M_imag_V_TVALID\" :  \"" << out_M_imag_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_M_imag_V_TREADY\" :  \"" << out_M_imag_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

