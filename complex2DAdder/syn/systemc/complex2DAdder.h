// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _complex2DAdder_HH_
#define _complex2DAdder_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "complex2DAdder_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 9,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct complex2DAdder : public sc_module {
    // Port declarations 26
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > out_M_real_V_TDATA;
    sc_out< sc_logic > out_M_real_V_TVALID;
    sc_in< sc_logic > out_M_real_V_TREADY;
    sc_out< sc_lv<32> > out_M_imag_V_TDATA;
    sc_out< sc_logic > out_M_imag_V_TVALID;
    sc_in< sc_logic > out_M_imag_V_TREADY;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;


    // Module declarations
    complex2DAdder(sc_module_name name);
    SC_HAS_PROCESS(complex2DAdder);

    ~complex2DAdder();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    complex2DAdder_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* complex2DAdder_AXILiteS_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<3> > in1_M_real_V_address0;
    sc_signal< sc_logic > in1_M_real_V_ce0;
    sc_signal< sc_lv<32> > in1_M_real_V_q0;
    sc_signal< sc_lv<3> > in1_M_imag_V_address0;
    sc_signal< sc_logic > in1_M_imag_V_ce0;
    sc_signal< sc_lv<32> > in1_M_imag_V_q0;
    sc_signal< sc_lv<4> > in2_M_real_V_address0;
    sc_signal< sc_logic > in2_M_real_V_ce0;
    sc_signal< sc_lv<32> > in2_M_real_V_q0;
    sc_signal< sc_lv<4> > in2_M_imag_V_address0;
    sc_signal< sc_logic > in2_M_imag_V_ce0;
    sc_signal< sc_lv<32> > in2_M_imag_V_q0;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_logic > complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<3> > index_reg_130;
    sc_signal< sc_lv<1> > exitcond1_fu_141_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_203;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_100;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_sig_ioackin_out_M_real_V_TREADY;
    sc_signal< sc_logic > ap_sig_ioackin_out_M_imag_V_TREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<3> > index_1_fu_147_p2;
    sc_signal< sc_lv<64> > tmp_4_cast_fu_183_p1;
    sc_signal< sc_lv<64> > tmp_fu_153_p1;
    sc_signal< sc_logic > ap_reg_ioackin_out_M_real_V_TREADY;
    sc_signal< sc_logic > ap_reg_ioackin_out_M_imag_V_TREADY;
    sc_signal< sc_lv<5> > tmp_2_fu_163_p3;
    sc_signal< sc_lv<5> > tmp_cast_fu_159_p1;
    sc_signal< sc_lv<5> > tmp_3_fu_171_p2;
    sc_signal< sc_lv<5> > tmp_4_fu_177_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_2;
    sc_signal< bool > ap_sig_bdd_202;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_147;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st4_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_100();
    void thread_ap_sig_bdd_147();
    void thread_ap_sig_bdd_202();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st4_fsm_2();
    void thread_ap_sig_ioackin_out_M_imag_V_TREADY();
    void thread_ap_sig_ioackin_out_M_real_V_TREADY();
    void thread_complex2DAdder_AXILiteS_s_axi_U_ap_dummy_ce();
    void thread_exitcond1_fu_141_p2();
    void thread_in1_M_imag_V_address0();
    void thread_in1_M_imag_V_ce0();
    void thread_in1_M_real_V_address0();
    void thread_in1_M_real_V_ce0();
    void thread_in2_M_imag_V_address0();
    void thread_in2_M_imag_V_ce0();
    void thread_in2_M_real_V_address0();
    void thread_in2_M_real_V_ce0();
    void thread_index_1_fu_147_p2();
    void thread_out_M_imag_V_TDATA();
    void thread_out_M_imag_V_TVALID();
    void thread_out_M_real_V_TDATA();
    void thread_out_M_real_V_TVALID();
    void thread_tmp_2_fu_163_p3();
    void thread_tmp_3_fu_171_p2();
    void thread_tmp_4_cast_fu_183_p1();
    void thread_tmp_4_fu_177_p2();
    void thread_tmp_cast_fu_159_p1();
    void thread_tmp_fu_153_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
